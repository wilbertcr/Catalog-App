[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/AddCategoryForm.js",
    "memberof": null,
    "longname": "components/AddCategoryForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport validator from 'validator';\r\n\r\n\r\n/**\r\n *\r\n * @class AddCategoryForm\r\n * */\r\nexport default class AddCategoryForm extends Component {\r\n    /**\r\n     * @constructs AddCategoryForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.addCategory - See {@link CatalogApp#addCategory}\r\n     * @param {Object} props.switchModalVisibility - See {@link CatalogApp#addCategory}\r\n     * @param {Object} props.switchModalVisibility - See {@link Sidebar@switchModalVisibility}\r\n     *\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /** @member {Object} A State object composed of the state variables\r\n         * @property {boolean} state.validated - True if the form is validated, false otherwise.\r\n         * @property {string} state.name - The name of the category\r\n         * @property {number} state.stage - 0(Editing) 1(Confirming)\r\n         * @property {boolean} state.isInputEnabled - If true, inputs are enabled. If false, inputs are disabled.\r\n         * */\r\n        this.state = {\r\n                validated: false,\r\n                name: \"\",\r\n                stage: 0,\r\n                isInputEnabled: true\r\n            }\r\n    }\r\n\r\n    /**\r\n     * Moves form from editing(0) stage to confirmation(1) stage.\r\n     * Input is disabled at the same time.\r\n     * */\r\n    advanceStage(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage+1,\r\n            isInputEnabled: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Moves form from confirmation(1) stage to editing(0) stage.\r\n     * Input is (re)enabled\r\n     * */\r\n    goBack(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage-1,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback for onChange event in the \"Name\" field.\r\n     * */\r\n    updateName(){\r\n        //First we sanitize the input.\r\n        var name = validator.sanitize(this.textInput.value).xss();\r\n        //Then we update the state.\r\n        this.setState({...this.state,\r\n            name: name,\r\n            validated: !(name===\"\")\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Requests this.props.addCategory to add the new category\r\n     * after making sure the content is validated.\r\n     * It also switches the modal off and resets the fields.\r\n     * */\r\n    addCategory(){\r\n        if(this.state.validated){\r\n            //If the content is valid.\r\n            //Then ship to the function that will ship it down the wire.\r\n            this.props.addCategory(this.state.name);\r\n            this.props.switchModalVisibility();\r\n            this.resetFields();\r\n        } else {\r\n            //This shouldn't happen so we warn the programmer.\r\n            console.error(\"AddCategoryForm.js - Line 76: This shouldn't be called when data is invalid.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the fields in the form to their original state.\r\n     * */\r\n    resetFields(){\r\n        this.setState({\r\n            ...this.state,\r\n            name: \"\",\r\n            validated: true,\r\n            stage: 0,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets fields and hides modal.\r\n     * */\r\n    switchModalVisibility(){\r\n        this.resetFields();\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    render() {\r\n        var formClasses;\r\n        var buttons;\r\n        if(this.state.stage===0 && this.state.validated){\r\n            /**\r\n             * If we're editing and content is validated\r\n             * */\r\n             //Then we want a regular form.\r\n            formClasses = 'ui form';\r\n            //And we display the \"Back\" and \"Next\" Buttons.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===0 && !this.state.validated){\r\n            //If we're editing and content is not validated.\r\n            //We want to show an error in the form\r\n            formClasses = 'ui small form error';\r\n            //And we want buttons to be disabled.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui disabled basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui disabled basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===1 && this.state.validated){\r\n            //If we are done editing.\r\n            //We want to show a success message.\r\n            formClasses = 'ui small form success';\r\n            //We want to ask the user to confirm via a \"success\" message.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.goBack}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.addCategory}>\r\n                    Send<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"ui item\">\r\n                <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                <div className=\"header\">\r\n                    Add Category\r\n                </div>\r\n                <div className=\"image content\">\r\n\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className={formClasses}>\r\n                        <div className=\"ui field\">\r\n                            <div className=\"required field\">\r\n                                <label>Name</label>\r\n                                <input type=\"text\"\r\n                                       ref={\r\n                                        (ref) => {\r\n                                            this.textInput=ref;\r\n                                            if(this.textInput!==null){\r\n                                                this.textInput.focus();\r\n                                            }\r\n                                        }\r\n                                       }\r\n                                       disabled={!this.state.isInputEnabled}\r\n                                       value={this.state.name}\r\n                                       onChange={this.updateName}/>\r\n                            </div>\r\n                            <div className=\"ui error message\">\r\n                                <div className=\"header\">Empty name</div>\r\n                                <p>Category must have a nonempty name.</p>\r\n                            </div>\r\n                            <div className=\"ui success message\">\r\n                                <div className=\"header\">\r\n                                    Please confirm the change.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {buttons}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AddCategoryForm",
    "memberof": "components/AddCategoryForm.js",
    "longname": "components/AddCategoryForm.js~AddCategoryForm",
    "access": null,
    "export": true,
    "importPath": "./components/AddCategoryForm.js",
    "importStyle": "AddCategoryForm",
    "description": "",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AddCategoryForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "AddCategoryForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.addCategory",
        "description": "See {@link CatalogApp#addCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link CatalogApp#addCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link Sidebar@switchModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#state",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A State object composed of the state variables"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.validated",
        "description": "True if the form is validated, false otherwise."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The name of the category"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.stage",
        "description": "0(Editing) 1(Confirming)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isInputEnabled",
        "description": "If true, inputs are enabled. If false, inputs are disabled."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "advanceStage",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#advanceStage",
    "access": null,
    "description": "Moves form from editing(0) stage to confirmation(1) stage.\nInput is disabled at the same time.",
    "lineNumber": 40,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "goBack",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#goBack",
    "access": null,
    "description": "Moves form from confirmation(1) stage to editing(0) stage.\nInput is (re)enabled",
    "lineNumber": 52,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateName",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#updateName",
    "access": null,
    "description": "Callback for onChange event in the \"Name\" field.",
    "lineNumber": 63,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addCategory",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#addCategory",
    "access": null,
    "description": "Requests this.props.addCategory to add the new category\nafter making sure the content is validated.\nIt also switches the modal off and resets the fields.",
    "lineNumber": 78,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 8,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetFields",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#resetFields",
    "access": null,
    "description": "Reset the fields in the form to their original state.",
    "lineNumber": 94,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 9,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#switchModalVisibility",
    "access": null,
    "description": "Resets fields and hides modal.",
    "lineNumber": 107,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/AddCategoryForm.js~AddCategoryForm",
    "longname": "components/AddCategoryForm.js~AddCategoryForm#render",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/AddItemForm.js",
    "memberof": null,
    "longname": "components/AddItemForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport validator from 'validator';\r\n\r\n/**\r\n *\r\n * @class AddItemForm\r\n * */\r\nexport default class AddItemForm extends Component {\r\n    /**\r\n     * @constructs EditItemForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.addItem - See {@link CatalogApp#addItem}\r\n     * @param {number} props.categoryId - See {@link CatalogApp#state}\r\n     * @param {Object} props.switchModalVisibility - See {@link ItemsContainer#switchModalVisibility}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         * @member {Object} A state object composed of the state variables.\r\n         * @property {boolean} state.isNameValid\r\n         * @property {boolean} state.isPriceValid\r\n         * @property {boolean} state.isDescriptionValid\r\n         * @property {boolean} state.newPictureMounted\r\n         * @property {number} state.id - The item's id.\r\n         * @property {string} state.picture - The path to the item's picture\r\n         * @property {string} state.name - The item's name.\r\n         * @property {string} state.price - The item's price.\r\n         * @property {string} state.description - The item's description.\r\n         * @property {number} state.stage - The stage of the form(0 or 1).\r\n         * @property {Object} state.file - A File object\r\n         * @property {boolean} state.validated - If true, the form's fields are all valid.\r\n         * */\r\n        this.state = {\r\n                isNameValid: false,\r\n                isPriceValid: false,\r\n                isDescriptionValid: false,\r\n                newPictureMounted:false,\r\n                id: 0,\r\n                picture: \"/static/images/image.png\",\r\n                name: \"\",\r\n                price: \"\",\r\n                description: \"\",\r\n                stage: 0,\r\n                file: null,\r\n                validated: true,\r\n                isInputEnabled: true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves form from editing(0) to confirmation(1) stage.\r\n     * */\r\n    advanceStage(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage+1,\r\n            isInputEnabled: false\r\n        });\r\n    }\r\n\r\n    goBack(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage-1,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    isValidated(){\r\n        return \"\" !== this.state.price &&\r\n            \"\" !== this.state.name &&\r\n            \"\" !== this.state.description &&\r\n            \"\" !== this.state.picture &&\r\n            this.state.newPictureMounted;\r\n    }\r\n\r\n    hasChanged(){\r\n        return  \"\" !== this.state.price ||\r\n            \"\" !== this.state.name ||\r\n            \"\" !== this.state.description ||\r\n            \"\" !== this.state.picture;\r\n    }\r\n\r\n    updateName(e){\r\n        let newName = validator.sanitize(this.inputName.value).xss();\r\n        this.setState({\r\n            ...this.state,\r\n            name: newName,\r\n            isNameValid: newName!==\"\",\r\n            validated:  newName!==\"\" &&\r\n            this.state.isDescriptionValid &&\r\n            this.state.isPriceValid\r\n        });\r\n    }\r\n\r\n    updatePrice(e){\r\n\r\n        let newPrice = validator.sanitize(this.inputPrice.value).xss();\r\n        this.setState({\r\n            ...this.state,\r\n            price: newPrice,\r\n            isPriceValid: newPrice!==\"\",\r\n            validated:  this.state.isNameValid &&\r\n            this.state.isDescriptionValid &&\r\n            newPrice!==\"\"\r\n        });\r\n    }\r\n\r\n    updateDescription(e){\r\n        let newDescription = validator.sanitize(this.inputDescription.value).xss();\r\n        this.setState({\r\n            ...this.state,\r\n            description: newDescription,\r\n            isDescriptionValid: newDescription!==\"\",\r\n            validated: newDescription!==\"\" &&\r\n            this.state.isNameValid &&\r\n            this.state.isPriceValid\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ships item for editing in both, front end and back end.\r\n     * */\r\n    addItem(){\r\n        /**\r\n         * Item must be \"valid\"\r\n         * */\r\n        if(this.isValidated()){\r\n            var item = {\r\n                categoryId: this.props.categoryId,\r\n                id:this.state.id,\r\n                //this.isValidated==true means a file has been mounted, so it is safe to use its name here.\r\n                picture: \"/static/images/\"+this.state.file.name,\r\n                name: this.state.name,\r\n                price: this.state.price,\r\n                description: this.state.description,\r\n                file: this.state.file,\r\n                newPicture: this.state.newPictureMounted\r\n            };\r\n            /**\r\n             * We only want to talk to the backend\r\n             * if there's something to change\r\n             * */\r\n            if(this.hasChanged()){\r\n                this.props.addItem(item);\r\n            }\r\n\r\n            /**\r\n             * Now we start the process of\r\n             * hiding this menu and its modal.\r\n             * */\r\n            this.switchModalVisibility();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the fields in the form to their original state.\r\n     * */\r\n    resetFields(){\r\n        this.setState({\r\n            isNameValid: false,\r\n            isPriceValid: false,\r\n            isDescriptionValid: false,\r\n            newPictureMounted:false,\r\n            id: 0,\r\n            picture: \"/static/images/image.png\",\r\n            name: \"\",\r\n            price: \"\",\r\n            description: \"\",\r\n            stage: 0,\r\n            file: null,\r\n            validated: true,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Effectively hiding the modal without\r\n     * successfully saving its contents.\r\n     * */\r\n    switchModalVisibility(){\r\n        /**\r\n         * Reset and hide form.\r\n         * */\r\n        this.resetFields();\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    /**\r\n     * Prevents default behavior and prevents\r\n     * event e from propagaing up the node tree.\r\n     * */\r\n    stopEvent(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Captures the images dropped by users.\r\n     * */\r\n    handleDrop(e){\r\n        this.stopEvent(e)\r\n        const droppedFiles = e.dataTransfer ? e.dataTransfer.files : e.target.files;\r\n        var file = droppedFiles[0];\r\n        file.preview = window.URL.createObjectURL(file);\r\n        if (file.name.match(/\\.(jpg|jpeg|png|gif)$/)){\r\n            //File uploaded is an image\r\n            this.setState({\r\n                picture: file.preview,\r\n                file: file,\r\n                newPictureMounted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            ...this.state,\r\n            validated: this.isValidated()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        var formClasses;\r\n        var buttons;\r\n        if(this.state.stage===0 && this.state.validated){\r\n            /**\r\n             * If we're editing and content is validated\r\n             * */\r\n            //Then we want a regular form.\r\n            formClasses = 'ui form';\r\n            //And functioning buttons\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Submit<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===0 && !this.state.validated){\r\n            //If we're editing and content is not validated.\r\n            //We want to show an error in the form and to disable the button.\r\n            formClasses = 'ui small form error';\r\n            //And we want buttons to be disabled.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui disabled basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui disabled basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Submit<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===1 && this.state.validated){\r\n            //If we are done editing.\r\n            //We want to show a success message.\r\n            formClasses = 'ui small form success';\r\n            //We want to ask the user to confirm via a \"success\" message.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.goBack}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.addItem}>\r\n                    Send<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui grid container\">\r\n                <div className=\"ui container segment\">\r\n                    <a className=\"ui inverted red ribbon label\">Drag and drop <i className=\"photo icon\"></i></a>\r\n                    <div className=\"item\">\r\n                        <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                        <div className=\"ui small image\"\r\n                             onDragOver={this.stopEvent}\r\n                             onDrop={this.handleDrop}>\r\n                            <div className=\"ui container segment\">\r\n                                <img src={this.state.picture}></img>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className={formClasses}>\r\n                                <div className=\"required field\"\r\n                                     ref={(ref) => this.FormContainer=ref}>\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\"\r\n                                           ref={(ref) => this.inputName=ref}\r\n                                           disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.name}\r\n                                           onChange={this.updateName}/>\r\n                                </div>\r\n                                <div className=\"required field\">\r\n                                    <label>Price</label>\r\n                                    <input type=\"text\"\r\n                                           ref={(ref) => this.inputPrice=ref}\r\n                                           disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.price}\r\n                                           onChange={this.updatePrice}/>\r\n                                </div>\r\n                                <div className=\"required field\">\r\n                                    <label>Description</label>\r\n                                    <textarea type=\"text\"\r\n                                           ref={(ref) => this.inputDescription=ref}\r\n                                              disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.description}\r\n                                           onChange={this.updateDescription}/>\r\n                                </div>\r\n                                <div className=\"ui error message\">\r\n                                    <div className=\"header\"></div>\r\n                                    <p>Please fill out all fields. Don't forget the photo!</p>\r\n                                </div>\r\n                                <div className=\"ui success message\">\r\n                                    <div className=\"header\">\r\n                                        <p>Please confirm.</p>\r\n                                    </div>\r\n                                </div>\r\n                                {buttons}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 12,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AddItemForm",
    "memberof": "components/AddItemForm.js",
    "longname": "components/AddItemForm.js~AddItemForm",
    "access": null,
    "export": true,
    "importPath": "./components/AddItemForm.js",
    "importStyle": "AddItemForm",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AddItemForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 13,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "EditItemForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.addItem",
        "description": "See {@link CatalogApp#addItem}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.categoryId",
        "description": "See {@link CatalogApp#state}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link ItemsContainer#switchModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#state",
    "access": null,
    "description": "",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A state object composed of the state variables."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isNameValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isPriceValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDescriptionValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.newPictureMounted",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.id",
        "description": "The item's id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.picture",
        "description": "The path to the item's picture"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The item's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.price",
        "description": "The item's price."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.description",
        "description": "The item's description."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.stage",
        "description": "The stage of the form(0 or 1)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.file",
        "description": "A File object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.validated",
        "description": "If true, the form's fields are all valid."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "advanceStage",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#advanceStage",
    "access": null,
    "description": "Moves form from editing(0) to confirmation(1) stage.",
    "lineNumber": 55,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "goBack",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#goBack",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isValidated",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#isValidated",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasChanged",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#hasChanged",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateName",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#updateName",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updatePrice",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#updatePrice",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateDescription",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#updateDescription",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addItem",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#addItem",
    "access": null,
    "description": "Ships item for editing in both, front end and back end.",
    "lineNumber": 126,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetFields",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#resetFields",
    "access": null,
    "description": "Reset the fields in the form to their original state.",
    "lineNumber": 161,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#switchModalVisibility",
    "access": null,
    "description": "Effectively hiding the modal without\nsuccessfully saving its contents.",
    "lineNumber": 183,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopEvent",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#stopEvent",
    "access": null,
    "description": "Prevents default behavior and prevents\nevent e from propagaing up the node tree.",
    "lineNumber": 195,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleDrop",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#handleDrop",
    "access": null,
    "description": "Captures the images dropped by users.",
    "lineNumber": 203,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "componentDidMount",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#componentDidMount",
    "access": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/AddItemForm.js~AddItemForm",
    "longname": "components/AddItemForm.js~AddItemForm#render",
    "access": null,
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/Category.js",
    "memberof": null,
    "longname": "components/Category.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport Component from './Component';\r\nimport ModalPageGeneric from './ModalPageGeneric'\r\nimport EditCategoryForm from './EditCategoryForm'\r\nimport DeleteCategoryForm from './DeleteCategoryForm'\r\n\r\n/**\r\n * Represents the modal itself.\r\n * @class Category\r\n * */\r\nexport default class Category extends Component{\r\n    /**\r\n     * @constructs Category\r\n     * @param {Object} props - Object passed down to us from our parent.\r\n     * @param {{id: number, name: string, picture: string}} props.category - A category in the categories array here {@link CatalogApp#state}.\r\n     * @param {STATUS} props.loginStatus - See {@link CatalogApp#STATUS}\r\n     * @param {Object} props.displayCategory - See {@link CatalogApp#displayCategory}\r\n     * @param {Object} props.setActiveCategory - See {@link Sidebar#setActiveCategory}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /** @member {Object} A State object composed of the state variables\r\n         * @property {string} state.name - The name of the category\r\n         * @property {boolean} state.isEditModalVisible - If true, edit modal is visible.\r\n         * @property {boolean} state.isDeleteModalVisible - If true, delete modal is visible.\r\n         * */\r\n        this.state = {\r\n            name:\"\",\r\n            isEditModalVisible: false,\r\n            isDeleteModalVisible: false,\r\n        };\r\n        /** @member {Object} The React element we will display inside the \"Edit\" modal. Also see {@link Category#render}*/\r\n        this.EditReactElement = <element></element>;\r\n        /** @member {Object} The React element we will display inside the \"Delete\" modal. Also see {@link Category#render}*/\r\n        this.DeleteReactElement = <element></element>;\r\n    }\r\n\r\n    displayCategory(){\r\n        /**\r\n         * Triggered when a category is clicked.\r\n         * */\r\n        //Someone up the chain will display the items of this category and that someone\r\n        //needs to know the category id we want to display.\r\n        this.props.displayCategory(this.props.category.id);\r\n        //We need to tell the world that this category is now the one being displayed.\r\n        this.props.setActiveCategory(this.props.category.id)\r\n    }\r\n\r\n    switchEditModalVisibility(){\r\n        /**\r\n         * Changes the visibility of the \"Edit\" Modal.\r\n         * */\r\n        this.setState({...this.state,isEditModalVisible: !this.state.isEditModalVisible});\r\n    }\r\n\r\n    switchDeleteModalVisibility(){\r\n        /**\r\n         * Changes the visibility of the \"Delete\" Modal.\r\n         * */\r\n        this.setState({...this.state,isDeleteModalVisible: !this.state.isDeleteModalVisible});\r\n    }\r\n\r\n    render(){\r\n\r\n        this.EditReactElement = <EditCategoryForm\r\n            {...this.props}\r\n            switchModalVisibility={this.switchEditModalVisibility}\r\n        />;\r\n\r\n        this.DeleteReactElement = <DeleteCategoryForm\r\n            {...this.props}\r\n            switchModalVisibility={this.switchDeleteModalVisibility}\r\n        />;\r\n\r\n        var classes = this.props.activeCategory==this.props.category.id ?\r\n            \"blue left active item\":\r\n            \"blue left item\";\r\n\r\n        return(\r\n            <a className={classes}>\r\n                <i className=\"trash red icon\"\r\n                   style={{display: this.props.loginStatus.value ? 'inline-block' : 'none'}}\r\n                   onClick={this.switchDeleteModalVisibility}>\r\n                </i>\r\n                <i className=\"edit blue icon\"\r\n                      style={{display: this.props.loginStatus.value ? 'inline-block' : 'none'}}\r\n                      onClick={this.switchEditModalVisibility}>\r\n                </i>\r\n                <div className=\"ui blue circular label\"\r\n                     onClick={this.displayCategory}>\r\n                    {this.props.category.items.length}\r\n                </div>\r\n                <div className=\"ui text\"\r\n                     onClick={this.displayCategory}>\r\n                    {this.props.category.name}\r\n                </div>\r\n                <ModalPageGeneric category={this.props.category}\r\n                                  isVisible={this.state.isEditModalVisible}\r\n                                  switchModalVisibility={this.switchEditModalVisibility}\r\n                                  editCategory={this.props.editCategory}\r\n                                  reactComponent={this.EditReactElement}\r\n                />\r\n                <ModalPageGeneric category={this.props.category}\r\n                                  isVisible={this.state.isDeleteModalVisible}\r\n                                  switchModalVisibility={this.switchDeleteModalVisibility}\r\n                                  deleteCategory={this.props.deleteCategory}\r\n                                  reactComponent={this.DeleteReactElement}\r\n                />\r\n           </a>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 30,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Category",
    "memberof": "components/Category.js",
    "longname": "components/Category.js~Category",
    "access": null,
    "export": true,
    "importPath": "./components/Category.js",
    "importStyle": "Category",
    "description": "Represents the modal itself.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Category"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 31,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Category"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent."
      },
      {
        "nullable": null,
        "types": [
          "{id: number, name: string, picture: string}"
        ],
        "spread": false,
        "optional": false,
        "name": "props.category",
        "description": "A category in the categories array here {@link CatalogApp#state}."
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "props.loginStatus",
        "description": "See {@link CatalogApp#STATUS}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.displayCategory",
        "description": "See {@link CatalogApp#displayCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.setActiveCategory",
        "description": "See {@link Sidebar#setActiveCategory}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#state",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A State object composed of the state variables"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The name of the category"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isEditModalVisible",
        "description": "If true, edit modal is visible."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDeleteModalVisible",
        "description": "If true, delete modal is visible."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "EditReactElement",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#EditReactElement",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} The React element we will display inside the \"Edit\" modal. Also see {@link Category#render}"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "DeleteReactElement",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#DeleteReactElement",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} The React element we will display inside the \"Delete\" modal. Also see {@link Category#render}"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayCategory",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#displayCategory",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchEditModalVisibility",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#switchEditModalVisibility",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchDeleteModalVisibility",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#switchDeleteModalVisibility",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#render",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "EditReactElement",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#EditReactElement",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "DeleteReactElement",
    "memberof": "components/Category.js~Category",
    "longname": "components/Category.js~Category#DeleteReactElement",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/Component.js",
    "memberof": null,
    "longname": "components/Component.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react'\r\n\r\n/**\r\n * Component autobinds(bind(this)) to all methods created by whoever extends this class.\r\n * @class Component\r\n * */\r\nexport default class Component extends React.Component {\r\n\r\n    /**\r\n     * @constructs Component\r\n     * @param {Object} props - Object pass down to us\r\n     * @param {boolean} [shouldAutoBind=] - Whether to autobind or not.\r\n     * */\r\n    constructor(props, shouldAutoBind=true) {\r\n        super(props)\r\n\r\n        if (shouldAutoBind) {\r\n            this.autoBind()\r\n        }\r\n    }\r\n    /**\r\n     * Binds \"this\" to all methods passed in.\r\n     * @param {Object[]} methods - Array of methods to which \"this\" will be bound.\r\n     * */\r\n    bindMethods(methods) {\r\n        methods.forEach(method => {\r\n            this[method] = this[method].bind(this)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Gets all the non-default methods and passes them down to {@link bindMethods}\r\n     * */\r\n    autoBind() {\r\n        this.bindMethods(Object.getOwnPropertyNames(this.constructor.prototype).filter(prop => (typeof this[prop] === 'function') && (!Component.ignoreAutoBindFunctions.includes(prop))))\r\n    }\r\n}\r\n\r\n/**\r\n * We will ignore the default methods as they are already autobound.\r\n * */\r\nComponent.ignoreAutoBindFunctions = [\r\n    'constructor',\r\n    'render',\r\n    'componentWillMount',\r\n    'componentDidMount',\r\n    'componentWillUpdate',\r\n    'componentDidUpdate',\r\n    'componentWillUnmount'\r\n]"
  },
  {
    "__docId__": 42,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Component",
    "memberof": "components/Component.js",
    "longname": "components/Component.js~Component",
    "access": null,
    "export": true,
    "importPath": "./components/Component.js",
    "importStyle": "Component",
    "description": "Component autobinds(bind(this)) to all methods created by whoever extends this class.",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Component"
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 43,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/Component.js~Component",
    "longname": "components/Component.js~Component#constructor",
    "access": null,
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Component"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object pass down to us"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "",
        "defaultRaw": "",
        "name": "shouldAutoBind",
        "description": "Whether to autobind or not."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bindMethods",
    "memberof": "components/Component.js~Component",
    "longname": "components/Component.js~Component#bindMethods",
    "access": null,
    "description": "Binds \"this\" to all methods passed in.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "methods",
        "description": "Array of methods to which \"this\" will be bound."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "autoBind",
    "memberof": "components/Component.js~Component",
    "longname": "components/Component.js~Component#autoBind",
    "access": null,
    "description": "Gets all the non-default methods and passes them down to {@link bindMethods}",
    "lineNumber": 34,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/DeleteCategoryForm.js",
    "memberof": null,
    "longname": "components/DeleteCategoryForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\n\r\n/**\r\n * Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.\r\n * @class DeleteCategoryForm\r\n * */\r\nexport default class DeleteCategoryForm extends Component {\r\n\r\n    /**\r\n     * @constructs DeleteCategoryForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.category - See {@link Category#constructor}\r\n     * @param {Object} props.deleteCategory - See {@link CatalogApp#deleteCategory}\r\n     * @param {Object} props.switchModalVisibility - See {@link Category#switchDeleteModalVisibility}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    deleteCategory(){\r\n        /**\r\n         * Triggered by \"Yes\" Button.\r\n         * */\r\n        //We ship to the function that will ship it down the wire.\r\n        this.props.deleteCategory(this.props.category.id);\r\n        //We also need to close the modal, since we're done here.\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    render() {\r\n        var formClasses;\r\n        var buttons;\r\n        formClasses = 'ui small form error';\r\n        buttons = <div className=\"ui buttons\">\r\n            <div className=\"ui basic blue button\"\r\n                 onClick={this.deleteCategory}>\r\n                Yes\r\n            </div>\r\n            <div className=\"ui basic red button\"\r\n                 onClick={this.props.switchModalVisibility}>\r\n                No\r\n            </div>\r\n        </div>;\r\n\r\n        return (\r\n            <div className=\"ui item\">\r\n                <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                <div className=\"header\">\r\n                    Confirmation\r\n                </div>\r\n                <div className=\"image content\">\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className={formClasses}>\r\n                        <div className=\"one field\">\r\n                            <div className=\"container \"></div>\r\n                            <div className=\"ui error message\">\r\n                                <p>Are you sure you want to delete {this.props.category.name}?</p>\r\n                            </div>\r\n                        </div>\r\n                        {buttons}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 47,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DeleteCategoryForm",
    "memberof": "components/DeleteCategoryForm.js",
    "longname": "components/DeleteCategoryForm.js~DeleteCategoryForm",
    "access": null,
    "export": true,
    "importPath": "./components/DeleteCategoryForm.js",
    "importStyle": "DeleteCategoryForm",
    "description": "Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DeleteCategoryForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 48,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/DeleteCategoryForm.js~DeleteCategoryForm",
    "longname": "components/DeleteCategoryForm.js~DeleteCategoryForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "DeleteCategoryForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.category",
        "description": "See {@link Category#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.deleteCategory",
        "description": "See {@link CatalogApp#deleteCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link Category#switchDeleteModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deleteCategory",
    "memberof": "components/DeleteCategoryForm.js~DeleteCategoryForm",
    "longname": "components/DeleteCategoryForm.js~DeleteCategoryForm#deleteCategory",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/DeleteCategoryForm.js~DeleteCategoryForm",
    "longname": "components/DeleteCategoryForm.js~DeleteCategoryForm#render",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/DeleteItemForm.js",
    "memberof": null,
    "longname": "components/DeleteItemForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\n\r\n/**\r\n * Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.\r\n * @class DeleteItemForm\r\n * */\r\nexport default class DeleteItemForm extends Component {\r\n\r\n    /**\r\n     * @constructs DeleteItemForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.deleteItem - See {@link CatalogApp@deleteItem}\r\n     * @param {Object} props.switchModalVisibility - See {@link Item#switchDeleteModalVisibility}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    deleteItem(){\r\n        /**\r\n         * Triggered by \"Yes\" Button.\r\n         * */\r\n        //We ship to the function that will ship it down the wire.\r\n        this.props.deleteItem(this.props.item.id);\r\n        //We also need to close the modal, since we're done here.\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    render() {\r\n        var formClasses;\r\n        var buttons;\r\n        formClasses = 'ui small form error';\r\n        buttons = <div className=\"ui buttons\">\r\n            <div className=\"ui basic blue button\"\r\n                 onClick={this.deleteItem}>\r\n                Yes\r\n            </div>\r\n            <div className=\"ui basic red button\"\r\n                 onClick={this.props.switchModalVisibility}>\r\n                No\r\n            </div>\r\n        </div>;\r\n\r\n        return (\r\n\r\n        <div className=\"ui grid container\">\r\n            <div className=\"ui container segment\">\r\n                <div className=\"ui item\">\r\n                    <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                    <div className=\"header\">\r\n                        Confirmation\r\n                    </div>\r\n                    <div className=\"image content\">\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className={formClasses}>\r\n                            <div className=\"one field\">\r\n                                <div className=\"container padded segment\">\r\n                                    <div className=\"ui error message\">\r\n                                        <p>Are you sure you want to delete {this.props.item.name}?</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {buttons}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 52,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DeleteItemForm",
    "memberof": "components/DeleteItemForm.js",
    "longname": "components/DeleteItemForm.js~DeleteItemForm",
    "access": null,
    "export": true,
    "importPath": "./components/DeleteItemForm.js",
    "importStyle": "DeleteItemForm",
    "description": "Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DeleteItemForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/DeleteItemForm.js~DeleteItemForm",
    "longname": "components/DeleteItemForm.js~DeleteItemForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "DeleteItemForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.deleteItem",
        "description": "See {@link CatalogApp@deleteItem}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link Item#switchDeleteModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deleteItem",
    "memberof": "components/DeleteItemForm.js~DeleteItemForm",
    "longname": "components/DeleteItemForm.js~DeleteItemForm#deleteItem",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/DeleteItemForm.js~DeleteItemForm",
    "longname": "components/DeleteItemForm.js~DeleteItemForm#render",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/EditCategoryForm.js",
    "memberof": null,
    "longname": "components/EditCategoryForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport validator from 'validator';\r\n\r\n\r\n/**\r\n * Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.\r\n * @class EditCategoryForm\r\n * */\r\nexport default class EditCategoryForm extends Component {\r\n\r\n    /**\r\n     * @constructs EditCategoryForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.category - See {@link Category#constructor}\r\n     * @param {Object} props.editCategory - See {@link CatalogApp#editCategory}\r\n     * @param {Object} props.switchModalVisibility - See {@link Category#switchModalVisibility}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /** @member {Object} A State object composed of the state variables\r\n         * @property {Object} state.category - The category being edited.\r\n         * @property {string} state.name - The name of the category\r\n         * @property {boolean} state.validated - True if the form is validated, false otherwise.\r\n         * @property {number} state.stage - 0(Editing) 1(Confirming)\r\n         * @property {boolean} state.isInputEnabled - If true, inputs are enabled. If false, inputs are disabled.\r\n         * */\r\n        this.state = {\r\n            category: this.props.category,\r\n            name: this.props.category.name,\r\n            validated: true,\r\n            stage: 0,\r\n            isInputEnabled: true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Moves form from editing(0) stage to confirmation(1) stage.\r\n     * Input is disabled at the same time.\r\n     * */\r\n    advanceStage(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage+1,\r\n            isInputEnabled: false\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Moves form from confirmation(1) stage to editing(0) stage.\r\n     * Input is (re)enabled\r\n     * */\r\n    goBack(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage-1,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns true if at least one field has changed\r\n     * or a new picture has been dropped.\r\n     * */\r\n    hasChanged(){\r\n        return  this.props.category.name !== this.state.name;\r\n    }\r\n\r\n    /**\r\n     * Fired by the onChange event in the \"Name\" input field.\r\n     * */\r\n    updateName(){\r\n        //First we sanitize the input.\r\n        var name = validator.sanitize(this.textInput.value).xss();\r\n        //Then we update the state.\r\n        this.setState({...this.state,\r\n            //Update the value of the field.\r\n            name: name,\r\n            //The form is validated if the name field is not empty.\r\n            validated: !(name===\"\")\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ships category for editing.\r\n     * */\r\n    editCategory(){\r\n        if(this.state.validated){\r\n            //If the category is validated.\r\n            if(this.hasChanged()){\r\n                //And the content has changed.\r\n\r\n                //We change the name\r\n                this.setState({\r\n                    stage: 0,\r\n                    category: {...category,name: this.state.name}\r\n                });\r\n                //Then ship to the function that will ship it down the wire.\r\n                this.props.editCategory(this.state.category);\r\n            }\r\n            //I'll close the modal either way.\r\n            this.props.switchModalVisibility();\r\n        } else {\r\n            console.error(\"EditCagetoryForm.js - Line 96: This shouldn't be called when data is invalid.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the fields in the form to their original state.\r\n     * */\r\n    resetFields(){\r\n        this.setState({\r\n            ...this.state,\r\n            stage: 0,\r\n            category: this.props.category,\r\n            name: this.props.category.name,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resets form and calls {@link Category#switchEditModalVisibility}\r\n     * */\r\n    switchModalVisibility(){\r\n        this.resetFields();\r\n        //Somewhere up the chain, someone is in charged of closing it. The form doesn't know the details of that.\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    render() {\r\n        var formClasses;\r\n        var buttons;\r\n        if(this.state.stage===0 && this.state.validated){\r\n            /**\r\n             * If we're editing and content is validated\r\n             * Then we want a regular form.\r\n             */\r\n            formClasses = 'ui form';\r\n            //And we display the \"Back\" and \"Next\" Buttons.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===0 && !this.state.validated){\r\n            //If we're editing and some or all of the content isn't valid.\r\n            //then show an error and disable the button.\r\n            formClasses = 'ui small form error';\r\n            //And we disable the buttons, so the user cannot move forward.\r\n            //(user can always close the form or click on the modal to get out of here).\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui disabled basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui disabled basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===1 && this.state.validated){\r\n            //If we are done editing.\r\n            //We want to show a success message.\r\n            formClasses = 'ui small form success';\r\n            //We want to ask the user to confirm via a semantic-ui \"success\" message.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.goBack}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.editCategory}>\r\n                    Send<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui item\">\r\n                <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                <div className=\"header\">\r\n                    Edit Category\r\n                </div>\r\n                <div className=\"image content\">\r\n                </div>\r\n                <div className=\"content\">\r\n                    <div className={formClasses}>\r\n                        <div className=\"one field\">\r\n                            <div className=\"required field\">\r\n                                <label>Category</label>\r\n                                <input type=\"text\"\r\n                                       value={this.state.name}\r\n                                       ref={\r\n                                        (ref) => {\r\n                                            this.textInput=ref;\r\n                                            if(this.textInput!==null){\r\n                                                this.textInput.focus();\r\n                                            }\r\n                                        }\r\n                                       }\r\n                                       disabled={!this.state.isInputEnabled}\r\n                                       onChange={this.updateName}/>\r\n                            </div>\r\n                            <div className=\"ui error message\">\r\n                                <div className=\"header\">Empty name</div>\r\n                                <p>Category must have a nonempty name.</p>\r\n                            </div>\r\n                            <div className=\"ui success message\">\r\n                                <div className=\"header\">\r\n                                    Please confirm the change.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {buttons}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 57,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EditCategoryForm",
    "memberof": "components/EditCategoryForm.js",
    "longname": "components/EditCategoryForm.js~EditCategoryForm",
    "access": null,
    "export": true,
    "importPath": "./components/EditCategoryForm.js",
    "importStyle": "EditCategoryForm",
    "description": "Wrapper around Semantic-ui's \"ui form\". May be I should just call it Form.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "EditCategoryForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "EditCategoryForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.category",
        "description": "See {@link Category#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.editCategory",
        "description": "See {@link CatalogApp#editCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link Category#switchModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#state",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A State object composed of the state variables"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.category",
        "description": "The category being edited."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The name of the category"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.validated",
        "description": "True if the form is validated, false otherwise."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.stage",
        "description": "0(Editing) 1(Confirming)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isInputEnabled",
        "description": "If true, inputs are enabled. If false, inputs are disabled."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "advanceStage",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#advanceStage",
    "access": null,
    "description": "Moves form from editing(0) stage to confirmation(1) stage.\nInput is disabled at the same time.",
    "lineNumber": 42,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "goBack",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#goBack",
    "access": null,
    "description": "Moves form from confirmation(1) stage to editing(0) stage.\nInput is (re)enabled",
    "lineNumber": 54,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasChanged",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#hasChanged",
    "access": null,
    "description": "Returns true if at least one field has changed\nor a new picture has been dropped.",
    "lineNumber": 66,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateName",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#updateName",
    "access": null,
    "description": "Fired by the onChange event in the \"Name\" input field.",
    "lineNumber": 73,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "editCategory",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#editCategory",
    "access": null,
    "description": "Ships category for editing.",
    "lineNumber": 88,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetFields",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#resetFields",
    "access": null,
    "description": "Reset the fields in the form to their original state.",
    "lineNumber": 112,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#switchModalVisibility",
    "access": null,
    "description": "Resets form and calls {@link Category#switchEditModalVisibility}",
    "lineNumber": 125,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/EditCategoryForm.js~EditCategoryForm",
    "longname": "components/EditCategoryForm.js~EditCategoryForm#render",
    "access": null,
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 68,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/EditItemForm.js",
    "memberof": null,
    "longname": "components/EditItemForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport validator from 'validator';\r\n\r\n/**\r\n * Form allows edition of items.\r\n * @class EditItemForm\r\n * */\r\nexport default class EditItemForm extends Component {\r\n\r\n    /**\r\n     * @constructs EditItemForm\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object} props.category - See {@link Category#constructor}\r\n     * @param {Object} props.editCategory - See {@link CatalogApp#editCategory}\r\n     * @param {Object} props.switchModalVisibility - See {@link Item#switchEditModalVisibility}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         * @member {Object} A state object composed of the state variables.\r\n         * @property {boolean} state.isNameValid\r\n         * @property {boolean} state.isPriceValid\r\n         * @property {boolean} state.isDescriptionValid\r\n         * @property {boolean} state.newPictureMounted\r\n         * @property {number} state.id - The item's id.\r\n         * @property {string} state.picture - The path to the item's picture\r\n         * @property {string} state.name - The item's name.\r\n         * @property {string} state.price - The item's price.\r\n         * @property {string} state.description - The item's description.\r\n         * @property {number} state.stage - The stage of the form(0 or 1).\r\n         * @property {Object} state.file - A File object\r\n         * @property {boolean} state.validated - If true, the form's fields are all valid.\r\n         * */\r\n        this.state = {\r\n                categoryId: this.props.categoryId,\r\n                isNameValid: true,\r\n                isPriceValid:true,\r\n                isDescriptionValid: true,\r\n                newPictureMounted:false,\r\n                id: this.props.item.id,\r\n                picture: this.props.item.picture,\r\n                name: this.props.item.name,\r\n                price: this.props.item.price,\r\n                description: this.props.item.description,\r\n                stage: 0,\r\n                file: null,\r\n                validated: true,\r\n                isInputEnabled: true\r\n            }\r\n    }\r\n\r\n    advanceStage(){\r\n        /**\r\n         * Moves form from editing(0) stage to confirmation(1) stage.\r\n         * Input is disabled at the same time.\r\n         * */\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage+1,\r\n            isInputEnabled: false\r\n        });\r\n    }\r\n\r\n    goBack(){\r\n        /**\r\n         * Moves form from confirmation(1) stage to editing(0) stage.\r\n         * Input is (re)enabled\r\n         * */\r\n        this.setState({\r\n            ...this.state,\r\n            stage: this.state.stage-1,\r\n            isInputEnabled: true\r\n        });\r\n    }\r\n\r\n    isValidated(){\r\n        /**\r\n         * Returns true if all fields have content in them.\r\n         * This should be much more intricate in a production environment.\r\n         * */\r\n        return this.state.isNameValid &&\r\n                this.state.isPriceValid &&\r\n                this.state.isDescriptionValid\r\n    }\r\n\r\n    hasChanged(){\r\n        /**\r\n         * Returns true if at least one field has changed\r\n         * or a new picture has been dropped.\r\n         * */\r\n        return  this.props.item.price !== this.state.price ||\r\n                this.props.item.name !== this.state.name ||\r\n                this.props.item.description !== this.state.description ||\r\n                this.props.item.picture !== this.state.picture;\r\n    }\r\n\r\n    updateName(e){\r\n        /**\r\n         * Callback for onChange event in the \"Name\" field.\r\n         * */\r\n        //First we sanitize the input.\r\n        let newName = validator.sanitize(this.inputName.value).xss();\r\n        //Then we update the state.\r\n        this.setState({\r\n            ...this.state,\r\n            //Update the value of the field.\r\n            name: newName,\r\n            //The field is valid, if it is not empty.\r\n            isNameValid: newName!==\"\",\r\n            // The form is valid if this and all the other fields are valid.\r\n            validated:  newName!==\"\" &&\r\n                        this.state.isDescriptionValid &&\r\n                        this.state.isPriceValid\r\n        });\r\n    }\r\n\r\n    updatePrice(e){\r\n        /**\r\n         * Callback for onChange event in the \"Price\" field.\r\n         * See updateName.\r\n         * */\r\n        let newPrice = validator.sanitize(this.inputPrice.value).xss();\r\n        this.setState({\r\n            ...this.state,\r\n            price: newPrice,\r\n            isPriceValid: newPrice!==\"\",\r\n            validated:  this.state.isNameValid &&\r\n                        this.state.isDescriptionValid &&\r\n                        newPrice!==\"\"\r\n        });\r\n    }\r\n\r\n    updateDescription(e){\r\n        /**\r\n         * Callback for onChange event in the \"Description\" field.\r\n         * See updateName for more details.\r\n         * */\r\n        let newDescription = validator.sanitize(this.inputDescription.value).xss();\r\n        this.setState({\r\n            ...this.state,\r\n            description: newDescription,\r\n            isDescriptionValid: newDescription!==\"\",\r\n            validated:  newDescription!==\"\" &&\r\n                        this.state.isNameValid &&\r\n                        this.state.isPriceValid\r\n        });\r\n    }\r\n\r\n    editItem(){\r\n        /**\r\n         * Ships item for editing.\r\n         * */\r\n        if(this.isValidated()){\r\n            //If item is valid.\r\n            var item = {\r\n                categoryId: this.state.categoryId,\r\n                id:this.state.id,\r\n                picture: this.state.newPictureMounted? \"/static/images/\"+this.state.file.name : this.state.picture,\r\n                name: this.state.name,\r\n                price: this.state.price,\r\n                description: this.state.description,\r\n                file: this.state.file,\r\n                newPicture: this.state.newPictureMounted\r\n            };\r\n            if(this.hasChanged()){\r\n                //And something changed.\r\n                //Then ship to the function that will ship it down the wire.\r\n                this.props.editItem(item);\r\n            }\r\n            /**\r\n             * Now we start the process of\r\n             * hiding this menu and its modal.\r\n             * */\r\n            this.switchModalVisibility();\r\n        }\r\n    }\r\n\r\n    switchModalVisibility(){\r\n        /**\r\n         * Effectively hiding the modal without\r\n         * successfully saving its contents.\r\n         * Form goes back to stage 0 before hiding.\r\n         * */\r\n        this.setState({\r\n            stage: 0,\r\n            isInputEnabled: true\r\n        });\r\n        //Somewhere up the chain, someone is in charged of closing it. The form doesn't know the details of that.\r\n        this.props.switchModalVisibility();\r\n    }\r\n\r\n    /**\r\n     * Prevents default behavior and prevents\r\n     * event e from propagating up the node tree.\r\n     * I am using it because \"Drop's\" default behavior is to navigate to a\r\n     * page displaying only the image the user just dropped. We don't want accidental drops\r\n     * to trigger that behavior, so we need to prevent it.\r\n     * */\r\n    stopEvent(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Triggered when the user drops a file in the image box.\r\n     * */\r\n    handleDrop(e){\r\n        //\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const droppedFiles = e.dataTransfer ? e.dataTransfer.files : e.target.files;\r\n        var file = droppedFiles[0];\r\n        file.preview = window.URL.createObjectURL(file);\r\n        if (file.name.match(/\\.(jpg|jpeg|png|gif)$/)){\r\n            //File uploaded is an image\r\n            this.setState({\r\n                picture: file.preview,\r\n                file: file,\r\n                newPictureMounted: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        var formClasses;\r\n        var buttons;\r\n\r\n        if(this.state.stage===0 && this.state.validated){\r\n            /**\r\n             * If we're editing and the content in all input fields is valid\r\n             * we want a regular form.\r\n             * */\r\n            formClasses = 'ui form';\r\n            //And we display the \"Back\" and \"Next\" Buttons.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===0 && !this.state.validated){\r\n            //If we're editing and some or all of the content isn't valid.\r\n            //then show an error and disable the button.\r\n            formClasses = 'ui small form error';\r\n            //And we disable the buttons, so the user cannot move forward.\r\n            //(user can always close the form or click on the modal to get out of here).\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui disabled basic blue button\"\r\n                     onClick={this.switchModalVisibility}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui disabled basic green button\"\r\n                     onClick={this.advanceStage}>\r\n                    Next<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n        if(this.state.stage===1 && this.state.validated){\r\n            //If we are done editing.\r\n            //We want to show a success message.\r\n            formClasses = 'ui small form success';\r\n            //We want to ask the user to confirm via a \"success\" message.\r\n            buttons = <div className=\"ui buttons\">\r\n                <div className=\"ui basic blue button\"\r\n                     onClick={this.goBack}>\r\n                    <i className=\"chevron circle left icon\"></i>Back\r\n                </div>\r\n                <div className=\"ui basic green button\"\r\n                     onClick={this.editItem}>\r\n                    Send<i className=\"chevron circle right icon\"></i>\r\n                </div>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui grid container\">\r\n                <div className=\"ui container segment\">\r\n                    <a className=\"ui inverted red ribbon label\">Drag and drop <i className=\"photo icon\"></i></a>\r\n                    <div className=\"item\">\r\n                        <i className=\"right floated big remove circle icon\" onClick={this.switchModalVisibility}></i>\r\n                        <div className=\"image padded content\"\r\n                             onDragOver={this.stopEvent}\r\n                             onDrop={this.handleDrop}>\r\n                            <img className=\"ui small image\"\r\n                                 src={this.state.picture}></img>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className={formClasses}>\r\n                                <div className=\"required field\"\r\n                                     ref={(ref) => this.FormContainer=ref}>\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\"\r\n                                           ref={(ref) => this.inputName=ref}\r\n                                           disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.name}\r\n                                           onChange={this.updateName}/>\r\n                                </div>\r\n                                <div className=\"required field\">\r\n                                    <label>Price</label>\r\n                                    <input type=\"text\"\r\n                                           ref={(ref) => this.inputPrice=ref}\r\n                                           disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.price}\r\n                                           onChange={this.updatePrice}/>\r\n                                </div>\r\n                                <div className=\"required field\">\r\n                                    <label>Description</label>\r\n                                    <textarea type=\"text\"\r\n                                           ref={(ref) => this.inputDescription=ref}\r\n                                           disabled={!this.state.isInputEnabled}\r\n                                           value={this.state.description}\r\n                                           onChange={this.updateDescription}/>\r\n                                </div>\r\n                                <div className=\"ui error message\">\r\n                                    <div className=\"header\"></div>\r\n                                    <p>Please fill out all fields. Don't forget the photo!</p>\r\n                                </div>\r\n                                <div className=\"ui success message\">\r\n                                    <div className=\"header\">\r\n                                        <p>Please confirm the change.</p>\r\n                                    </div>\r\n                                </div>\r\n                                {buttons}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 69,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EditItemForm",
    "memberof": "components/EditItemForm.js",
    "longname": "components/EditItemForm.js~EditItemForm",
    "access": null,
    "export": true,
    "importPath": "./components/EditItemForm.js",
    "importStyle": "EditItemForm",
    "description": "Form allows edition of items.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "EditItemForm"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#constructor",
    "access": null,
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "EditItemForm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.category",
        "description": "See {@link Category#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.editCategory",
        "description": "See {@link CatalogApp#editCategory}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.switchModalVisibility",
        "description": "See {@link Item#switchEditModalVisibility}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#state",
    "access": null,
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A state object composed of the state variables."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isNameValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isPriceValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDescriptionValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.newPictureMounted",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.id",
        "description": "The item's id."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.picture",
        "description": "The path to the item's picture"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The item's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.price",
        "description": "The item's price."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.description",
        "description": "The item's description."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.stage",
        "description": "The stage of the form(0 or 1)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.file",
        "description": "A File object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.validated",
        "description": "If true, the form's fields are all valid."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "advanceStage",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#advanceStage",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "goBack",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#goBack",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isValidated",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#isValidated",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasChanged",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#hasChanged",
    "access": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateName",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#updateName",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updatePrice",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#updatePrice",
    "access": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateDescription",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#updateDescription",
    "access": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "editItem",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#editItem",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#switchModalVisibility",
    "access": null,
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopEvent",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#stopEvent",
    "access": null,
    "description": "Prevents default behavior and prevents\nevent e from propagating up the node tree.\nI am using it because \"Drop's\" default behavior is to navigate to a\npage displaying only the image the user just dropped. We don't want accidental drops\nto trigger that behavior, so we need to prevent it.",
    "lineNumber": 201,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleDrop",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#handleDrop",
    "access": null,
    "description": "Triggered when the user drops a file in the image box.",
    "lineNumber": 209,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/EditItemForm.js~EditItemForm",
    "longname": "components/EditItemForm.js~EditItemForm#render",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/GoogleAuth2.js",
    "memberof": null,
    "longname": "components/GoogleAuth2.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport Component from './Component';\r\nimport apiCall from './apiCall';\r\n\r\n/**\r\n * googleAuth2  Sign in/Sign out Button.\r\n * @class GoogleAuth2\r\n * */\r\nexport default class GoogleAuth2 extends Component {\r\n    /**\r\n     * @constructs GoogleAuth2\r\n     * @param {Object} props - Object passed down to us from our parent.\r\n     * @param {Object} props.onSessionChange - See {@link CatalogApp#onSessionChange}\r\n     * @param {string} props.nonce - See {@link CatalogApp#state}\r\n     * @param {Object} props.updateNonce - See {@link CatalogApp#updateNonce}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         *Represents login status\r\n         * @type {Object}\r\n         * @property {{value: true, name: \"LoggedIn\"}} STATUS.LoggedIn - User is logged in.\r\n         * @property {{value: false, name: \"LoggedOut\"}} STATUS.LoggedOut - User is logged out.\r\n         * */\r\n        this.STATUS = {\r\n            LoggedIn : {value: true, name: \"LoggedIn\"},\r\n            LoggedOut : {value: false, name: \"LoggedOut\"}\r\n        }\r\n        /**\r\n         *Represents the current state.\r\n         * @type {Object}\r\n         * @property {string} state.nonce - The current nonce value.\r\n         * @property {STATUS} state.login_status - The current login status.\r\n         * @property {integer} state.userId - The id received from google.\r\n         * @property {string} state.userName\r\n         * @property {string} state.userEmail\r\n         * @property {string} state.userPicture\r\n         * */\r\n        this.state = {\r\n            loginStatus: this.STATUS.LoggedOut,\r\n            userId: 0,\r\n            userName: \"\",\r\n            userEmail: \"\",\r\n            userPicture: null\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Listener triggered when a change in the user's login status occurs.\r\n     * @param {boolean} loginState - loginState is true when the state just switched from logged out to logged in and false otherwise.\r\n     * */\r\n    onSessionChange(loginState){\r\n        if(loginState){\r\n            //There's a user logged in.\r\n            var googleAuth = gapi.auth2.getAuthInstance();\r\n            var googleUser = googleAuth.currentUser.get();\r\n            //Now we ask google to give our backend access.\r\n            //grantOfflineAccess makes a promise that\r\n            //gets fulfilled in the \"then\" and provides us\r\n            //with an authorization response.\r\n            googleAuth.grantOfflineAccess({\r\n                'redirect_uri':'postmessage'\r\n            }).then(function(authResponse){\r\n                //There should be a 'code' in authResponse.\r\n                //we need to send it to the back end.\r\n                if (authResponse['code']){\r\n                    apiCall({\r\n                            url: \"/gconnect?state=\"+this.props.nonce,\r\n                            type: 'POST',\r\n                            data: authResponse['code'],\r\n                            processData: false,\r\n                            //We're going to ship that authorization response's code\r\n                            //to the backend.\r\n                            contentType: 'application/octet-stream; charset=utf-8',\r\n                            success: function (result) {\r\n                                //If the backend can verify it, or if the\r\n                                //user is already logged in, we'll get\r\n                                //a result\r\n                                if(result){\r\n                                    var userProfile = googleUser.getBasicProfile();\r\n                                    this.setState({...this.state,\r\n                                        loginStatus: this.STATUS.LoggedIn,\r\n                                        userPicture : userProfile.getImageUrl(),\r\n                                        userEmail: userProfile.getEmail(),\r\n                                        userName: userProfile.getName(),\r\n                                        userId: userProfile.getId(),\r\n                                    });\r\n                                    this.props.onSessionChange(this.state.loginStatus);\r\n                                }\r\n                            }.bind(this),\r\n                            error: function (xhr, status, err) {\r\n                                console.error(\"Error signing in user.\");\r\n                                console.error(xhr, status, err.toString());\r\n                            }.bind(this)\r\n                    },this);\r\n                }\r\n            }.bind(this));\r\n        } else {\r\n            this.setState({...this.state,loginStatus: this.STATUS.LoggedOut});\r\n            this.props.onSessionChange(this.state.loginStatus);\r\n        }\r\n    }\r\n\r\n    /**This function is required by google, but I don't need it since I'm already\r\n     * listening to the changes in the session status. Hence it is empty.\r\n     * */\r\n    signInSuccess(googleUser){\r\n        //We're going to let the signin listener deal with this.\r\n    }\r\n\r\n    /**\r\n     * Not much to do if things go wrong with google. I'm not implementing a back up login system.\r\n     * */\r\n    signInFailure(reason){\r\n        console.error(\"Failed to sign in with google.\");\r\n        console.error(reason);\r\n    }\r\n\r\n    /**\r\n     * This function is called when the sign out button is pressed by the user.\r\n     *\r\n     * */\r\n    signOut(){\r\n        //In production, we wouldn't revoke all permits\r\n        //when a user signs out, however we don't want\r\n        //to let random apps like this with privileges\r\n        //lying around. Hence, we will revoke all permits\r\n        //whenever a user signs out.\r\n        apiCall({\r\n                url: '/gdisconnect?state='+this.props.nonce,\r\n                type: 'GET',\r\n                data: [],\r\n                processData: false,\r\n                //We're going to ship that authorization response's code\r\n                //to the backend.\r\n                success: function(result) {\r\n                    //We have successfully disconnected the user\r\n                    //from the app in the back end.\r\n                    //Now let's get a pointer to google Auth2 Instance.\r\n                    var googleAuth = gapi.auth2.getAuthInstance();\r\n                    //And use it to sign out the front end as well.\r\n                    //Note that I don't change the state here, instead\r\n                    //I let the listener I setup earlier take care of updating the state.\r\n                    googleAuth.signOut();\r\n                    this.setState({...this.state,\r\n                        userPicture : \"\",\r\n                        userEmail: \"\",\r\n                        userName: \"\"\r\n                    });\r\n                }.bind(this),\r\n                error: function (xhr, status, err) {\r\n                    console.error(xhr);\r\n                    console.error(status);\r\n                    console.error(err.toString());\r\n                }.bind(this)\r\n            },this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Let's get the google api's JS SDK\r\n        $.getScript('https://apis.google.com/js/platform.js',\r\n            function(){\r\n                var initSignInV2 = function(){\r\n                    //Initialize googleAuth2\r\n                    var googleAuth = gapi.auth2.init({\r\n                        'client_id': '487962395938-f923dbtpisv3oq7tivlvu4127g1jlh9m.apps.googleusercontent.com',\r\n                        'cookie_policy': 'single_host_origin',\r\n                        'scope':'openid email'\r\n                    });\r\n                    googleAuth.isSignedIn.listen(this.onSessionChange);\r\n                    //Attach click handler to the sign in button.\r\n                    googleAuth.attachClickHandler(\r\n                        'signInButton',\r\n                        {'scope': 'openid email',\r\n                            'redirect-uri':'postmessage',\r\n                            'accesstype': 'offline'\r\n                        },\r\n                        this.signInSuccess,\r\n                        this.signInFailure\r\n                    );\r\n                }.bind(this);\r\n                //Now we load auth2 and use initSignInV2 as call back,\r\n                //that way we make sure it is called after auth2 has loaded.\r\n                gapi.load('auth2', initSignInV2);\r\n            }.bind(this)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        /**\r\n         * @todo Implement this without using JQuery.\r\n         * */\r\n        $('.ui.dropdown').dropdown();\r\n        return (\r\n            <div className=\"ui blue top fixed inverted menu\"\r\n                 style={this.state.loginStatus.value ? {height: '54px'}: {} }>\r\n                <div className=\"right menu\">\r\n                    <a className=\"ui item\">\r\n                        <div id=\"signInButton\"\r\n                             className=\"ui google plus button\"\r\n                             style={{display: this.state.loginStatus.value ? 'none' : 'inline-block'}}>\r\n                            <i className=\"google plus icon\"></i>\r\n                            Sign in.\r\n                        </div>\r\n                        <div className=\"ui dropdown\"\r\n                             style={{display: this.state.loginStatus.value ? 'inline-block' : 'none'}}>\r\n                            <img className=\"ui avatar image dropdown\"\r\n                                 src={this.state.userPicture}>\r\n                            </img>\r\n                            <div className=\"ui inverted menu\">\r\n                                <div className=\"ui item\">\r\n                                    <div className=\"ui red card\">\r\n                                        <div className=\"image\">\r\n                                            <img src={this.state.userPicture}>\r\n                                            </img>\r\n                                        </div>\r\n                                        <div className=\"content\">\r\n                                            <div className=\"header\">\r\n                                                {this.state.userName}\r\n                                            </div>\r\n                                            <div className=\"meta\">\r\n                                                {this.state.userEmail}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"extra content\">\r\n                                            <div className=\"ui one white button\">\r\n                                                <div id=\"signOutButton\"\r\n                                                     className=\"ui google plus button\"\r\n                                                     onClick={this.signOut}\r\n                                                     style={{display: this.state.loginStatus.value ? 'inline-block' : 'none'}}>\r\n                                                    <i className=\"google plus icon\"></i>\r\n                                                    Sign out.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 85,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "GoogleAuth2",
    "memberof": "components/GoogleAuth2.js",
    "longname": "components/GoogleAuth2.js~GoogleAuth2",
    "access": null,
    "export": true,
    "importPath": "./components/GoogleAuth2.js",
    "importStyle": "GoogleAuth2",
    "description": "googleAuth2  Sign in/Sign out Button.",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "GoogleAuth2"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 86,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#constructor",
    "access": null,
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "GoogleAuth2"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onSessionChange",
        "description": "See {@link CatalogApp#onSessionChange}"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "props.nonce",
        "description": "See {@link CatalogApp#state}"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props.updateNonce",
        "description": "See {@link CatalogApp#updateNonce}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "STATUS",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#STATUS",
    "access": null,
    "description": "Represents login status",
    "lineNumber": 25,
    "properties": [
      {
        "nullable": null,
        "types": [
          "{value: true, name: \"LoggedIn\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedIn",
        "description": "User is logged in."
      },
      {
        "nullable": null,
        "types": [
          "{value: false, name: \"LoggedOut\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedOut",
        "description": "User is logged out."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#state",
    "access": null,
    "description": "Represents the current state.",
    "lineNumber": 39,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.nonce",
        "description": "The current nonce value."
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "state.login_status",
        "description": "The current login status."
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "state.userId",
        "description": "The id received from google."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.userName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.userEmail",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.userPicture",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onSessionChange",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#onSessionChange",
    "access": null,
    "description": "Listener triggered when a change in the user's login status occurs.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "loginState",
        "description": "loginState is true when the state just switched from logged out to logged in and false otherwise."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "signInSuccess",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#signInSuccess",
    "access": null,
    "description": "This function is required by google, but I don't need it since I'm already\nlistening to the changes in the session status. Hence it is empty.",
    "lineNumber": 107,
    "params": [
      {
        "name": "googleUser",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "signInFailure",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#signInFailure",
    "access": null,
    "description": "Not much to do if things go wrong with google. I'm not implementing a back up login system.",
    "lineNumber": 114,
    "params": [
      {
        "name": "reason",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "signOut",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#signOut",
    "access": null,
    "description": "This function is called when the sign out button is pressed by the user.",
    "lineNumber": 123,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "componentDidMount",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#componentDidMount",
    "access": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 94,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/GoogleAuth2.js~GoogleAuth2",
    "longname": "components/GoogleAuth2.js~GoogleAuth2#render",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/Item.js",
    "memberof": null,
    "longname": "components/Item.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport EditItemForm from './EditItemForm';\r\nimport DeleteItemForm from './DeleteItemForm'\r\nimport ModalPageGeneric from './ModalPageGeneric'\r\n/**\r\n * Represents an item in a category.\r\n * @class Item\r\n * */\r\nexport default class Item extends Component {\r\n    /**\r\n     * @constructs Item\r\n     * @param {Object} props - Object passed down to us from our parent.\r\n     * @param {{name: string, price: string, description: string, picture: string }} props.item\r\n     * @param {STATUS} props.loginStatus - See {@link CatalogApp#STATUS}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         *Represents login status\r\n         * @type {Object}\r\n         * @property {{value: true, name: \"LoggedIn\"}} STATUS.LoggedIn - User is logged in.\r\n         * @property {{value: false, name: \"LoggedOut\"}} STATUS.LoggedOut - User is logged out.\r\n         * */\r\n        this.STATUS = {\r\n            LoggedIn : {value: true, name: \"LoggedIn\"},\r\n            LoggedOut : {value: false, name: \"LoggedOut\"}\r\n        };\r\n        /** @member {Object} A State object composed of the state variables\r\n         * @property {boolean} state.isEditModalVisible - If true, the \"Edit\" modal is visible, if false the \"Edit\" modal is hidden.\r\n         * @property {boolean} state.isDeleteModalVisible - If true, the \"Delete\" modal is visible, if false the \"Delete\" modal is hidden.\r\n         * */\r\n        this.state = {\r\n            isEditModalVisible: false,\r\n            isDeleteModalVisible: false,\r\n        };\r\n\r\n        /** @member {Object} The React element we will display inside the \"Edit\" modal.*/\r\n        this.EditReactElement = <element></element>;\r\n        /** @member {Object} The React element we will display inside the \"Delete\" modal.*/\r\n        this.DeleteReactElement = <element></element>;\r\n    }\r\n\r\n    /**\r\n     * Changes visibility of \"Edit\" modal\r\n     * */\r\n    switchEditModalVisibility(){\r\n        this.setState({...this.state,isEditModalVisible: !this.state.isEditModalVisible});\r\n    }\r\n\r\n    /**\r\n     * Changes visibility of \"Delete\" modal\r\n     * */\r\n    switchDeleteModalVisibility(){\r\n        this.setState({...this.state,isDeleteModalVisible: !this.state.isDeleteModalVisible});\r\n    }\r\n\r\n    render() {\r\n\r\n        this.EditReactElement = <EditItemForm\r\n            {...this.props}\r\n            switchModalVisibility={this.switchEditModalVisibility}\r\n        />;\r\n        this.DeleteReactElement = <DeleteItemForm\r\n            {...this.props}\r\n            switchModalVisibility={this.switchDeleteModalVisibility}\r\n        />;\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"ui small circular bordered image\">\r\n                    <img src={this.props.item.picture}></img>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <a className=\"header\">\r\n                        Name: {this.props.item.name}\r\n                    </a>\r\n                    <div className=\"meta\">\r\n                        Price: ${this.props.item.price}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        Description: {this.props.item.description}\r\n                    </div>\r\n                    <div className=\"extra\"\r\n                         style={{display: this.props.loginStatus.value ? 'inline-block' : 'none'}}>\r\n                        <div className=\"ui two butons\">\r\n                            <div className=\"ui basic blue icon button\"\r\n                                 tabIndex=\"0\"\r\n                                 onClick={this.switchEditModalVisibility}>\r\n                                <i className=\"edit icon\"></i>\r\n                            </div>\r\n                            <div className=\"ui basic red icon button\"\r\n                                 tabIndex=\"1\"\r\n                                 onClick={this.switchDeleteModalVisibility}>\r\n                                <i className=\"trash icon\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ModalPageGeneric isVisible={this.state.isEditModalVisible}\r\n                                  switchModalVisibility={this.switchEditModalVisibility}\r\n                                  reactComponent={this.EditReactElement}\r\n                />\r\n                <ModalPageGeneric isVisible={this.state.isDeleteModalVisible}\r\n                                  switchModalVisibility={this.switchDeleteModalVisibility}\r\n                                  reactComponent={this.DeleteReactElement}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"
  },
  {
    "__docId__": 96,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Item",
    "memberof": "components/Item.js",
    "longname": "components/Item.js~Item",
    "access": null,
    "export": true,
    "importPath": "./components/Item.js",
    "importStyle": "Item",
    "description": "Represents an item in a category.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Item"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#constructor",
    "access": null,
    "description": "",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Item"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent."
      },
      {
        "nullable": null,
        "types": [
          "{name: string, price: string, description: string, picture: string }"
        ],
        "spread": false,
        "optional": false,
        "name": "props.item",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "props.loginStatus",
        "description": "See {@link CatalogApp#STATUS}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 98,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "STATUS",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#STATUS",
    "access": null,
    "description": "Represents login status",
    "lineNumber": 26,
    "properties": [
      {
        "nullable": null,
        "types": [
          "{value: true, name: \"LoggedIn\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedIn",
        "description": "User is logged in."
      },
      {
        "nullable": null,
        "types": [
          "{value: false, name: \"LoggedOut\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedOut",
        "description": "User is logged out."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#state",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A State object composed of the state variables"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isEditModalVisible",
        "description": "If true, the \"Edit\" modal is visible, if false the \"Edit\" modal is hidden."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDeleteModalVisible",
        "description": "If true, the \"Delete\" modal is visible, if false the \"Delete\" modal is hidden."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "EditReactElement",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#EditReactElement",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} The React element we will display inside the \"Edit\" modal."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "DeleteReactElement",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#DeleteReactElement",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} The React element we will display inside the \"Delete\" modal."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchEditModalVisibility",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#switchEditModalVisibility",
    "access": null,
    "description": "Changes visibility of \"Edit\" modal",
    "lineNumber": 48,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchDeleteModalVisibility",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#switchDeleteModalVisibility",
    "access": null,
    "description": "Changes visibility of \"Delete\" modal",
    "lineNumber": 55,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 104,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#render",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "EditReactElement",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#EditReactElement",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "DeleteReactElement",
    "memberof": "components/Item.js~Item",
    "longname": "components/Item.js~Item#DeleteReactElement",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/ItemsContainer.js",
    "memberof": null,
    "longname": "components/ItemsContainer.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport Item from './Item';\r\nimport AddItemForm from './AddItemForm'\r\nimport ModalPageGeneric from './ModalPageGeneric'\r\n\r\n/**\r\n * Items container\r\n * @class ItemsContainer\r\n * */\r\nexport default class ItemsContainer extends Component {\r\n    /**\r\n     * @constructs ItemsContainer\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {STATUS} props.loginStatus - See {@link CatalogApp#STATUS}\r\n     * @param {number} props.categoryId - See {@link CatalogApp#state}\r\n     * @param {Object[]} props.items - See {@link CatalogApp#state}\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         * @member {Object} A state object composed of the state variables.\r\n         * @property {boolean} state.isModalVisible - If true, modal is visible.\r\n         * */\r\n        this.state = {\r\n            isModalVisible: false\r\n        };\r\n        /** @member {Object} The React element we will display inside the \"addItem\" modal. Also see {@link ItemsContainer#render}*/\r\n        this.reactComponent = <element></element>;\r\n    }\r\n\r\n    /**\r\n     * Switches the visibility of addItemForm's modal.\r\n     * */\r\n    switchModalVisibility(){\r\n        this.setState({...this.state,isModalVisible: !this.state.isModalVisible});\r\n    }\r\n\r\n    render() {\r\n        var addItemButton = function(){\r\n            if(this.props.categoryId !== 0) {\r\n                //If a category has been selected.\r\n                this.reactElement = <AddItemForm\r\n                    addItem={this.props.addItem}\r\n                    categoryId={this.props.categoryId}\r\n                    switchModalVisibility={this.switchModalVisibility}\r\n                />;\r\n                return (\r\n                    <div className=\"item\"\r\n                         style={{display: this.props.loginStatus.value ? 'block' : 'none'}}>\r\n                        <div className=\"content\">\r\n                            <div className=\"extra\">\r\n                                <div className=\"ui buttons\" style={{display: 'flex'}}>\r\n                                    <div className=\"huge ui icon blue basic button\"\r\n                                         onClick={this.switchModalVisibility}>\r\n                                        <i className=\"add square icon\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ModalPageGeneric isVisible={this.state.isModalVisible}\r\n                                          switchModalVisibility={this.switchModalVisibility}\r\n                                          reactComponent={this.reactElement}\r\n                        />\r\n                    </div>);\r\n            } else {\r\n                //If no category has been selected\r\n                return <div></div>;\r\n            }\r\n        }.bind(this);\r\n        return (\r\n            <div className=\"container segment\">\r\n                <div className=\"ui one doubling divided items\">\r\n                    {this.props.items.map(\r\n                        function(item,index){\r\n                            return <Item key={item.id}\r\n                                         index={index}\r\n                                         item={item}\r\n                                {...this.props}\r\n                            />;\r\n                        }.bind(this)\r\n                    )}\r\n                    {addItemButton()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 108,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ItemsContainer",
    "memberof": "components/ItemsContainer.js",
    "longname": "components/ItemsContainer.js~ItemsContainer",
    "access": null,
    "export": true,
    "importPath": "./components/ItemsContainer.js",
    "importStyle": "ItemsContainer",
    "description": "Items container",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ItemsContainer"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 109,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "ItemsContainer"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "props.loginStatus",
        "description": "See {@link CatalogApp#STATUS}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.categoryId",
        "description": "See {@link CatalogApp#state}"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.items",
        "description": "See {@link CatalogApp#state}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#state",
    "access": null,
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A state object composed of the state variables."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isModalVisible",
        "description": "If true, modal is visible."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reactComponent",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#reactComponent",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} The React element we will display inside the \"addItem\" modal. Also see {@link ItemsContainer#render}"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#switchModalVisibility",
    "access": null,
    "description": "Switches the visibility of addItemForm's modal.",
    "lineNumber": 36,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#render",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reactElement",
    "memberof": "components/ItemsContainer.js~ItemsContainer",
    "longname": "components/ItemsContainer.js~ItemsContainer#reactElement",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/ModalGeneric.js",
    "memberof": null,
    "longname": "components/ModalGeneric.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\n\r\n\r\n/**\r\n * Represents the modal itself.\r\n * @class Modal\r\n * */\r\nexport default class ModalGeneric extends Component {\r\n    /**\r\n     * @constructs Modal\r\n     * @param {Object} props - Object passed down to us from our parent.\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n        /**\r\n         *Represents the current state.\r\n         * @type {Object}\r\n         * @property {Object[]} state.node - A reference to the modal container here.\r\n         * @property {{styles: {top: number, left: number}}} - Used to center the container modal.\r\n         * */\r\n        this.state = {\r\n            node: null,\r\n            styles: {\r\n                top: 0,\r\n                left: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Click handler. We don't want clicks propagating up, as they would hide the entire modal.\r\n     * So here we stop propagation of clicks.\r\n     * @param e - The click event.\r\n     * */\r\n    handleClick(e){\r\n        e.stopPropagation();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.state.node = this.modalRef;\r\n    }\r\n\r\n    render() {\r\n        var top = (window.innerHeight-$(this.state.node).height())/2;\r\n        var modalClasses = (this.props.isVisible)? 'ui small modal transition visible active': 'ui modal transition hidden';\r\n        //modalClasses determine which classes to use depending on the visibility state.\r\n        return (\r\n            <div className={modalClasses}\r\n                 onClick={this.handleClick}\r\n                 style={{top: top}}\r\n                 ref={(ref) => this.modalRef=ref}>\r\n                {this.props.reactComponent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModalGeneric.propTypes = {\r\n    isVisible: React.PropTypes.bool.isRequired,\r\n    switchModalVisibility: React.PropTypes.func.isRequired,\r\n    reactComponent: React.PropTypes.element.isRequired\r\n}"
  },
  {
    "__docId__": 116,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ModalGeneric",
    "memberof": "components/ModalGeneric.js",
    "longname": "components/ModalGeneric.js~ModalGeneric",
    "access": null,
    "export": true,
    "importPath": "./components/ModalGeneric.js",
    "importStyle": "ModalGeneric",
    "description": "Represents the modal itself.",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Modal"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 117,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/ModalGeneric.js~ModalGeneric",
    "longname": "components/ModalGeneric.js~ModalGeneric#constructor",
    "access": null,
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Modal"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/ModalGeneric.js~ModalGeneric",
    "longname": "components/ModalGeneric.js~ModalGeneric#state",
    "access": null,
    "description": "Represents the current state.",
    "lineNumber": 23,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "state.node",
        "description": "A reference to the modal container here."
      },
      {
        "nullable": null,
        "types": [
          "{styles: {top: number, left: number}}"
        ],
        "spread": false,
        "optional": false,
        "name": "-",
        "description": "Used to center the container modal."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleClick",
    "memberof": "components/ModalGeneric.js~ModalGeneric",
    "longname": "components/ModalGeneric.js~ModalGeneric#handleClick",
    "access": null,
    "description": "Click handler. We don't want clicks propagating up, as they would hide the entire modal.\nSo here we stop propagation of clicks.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": "The click event."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "componentDidMount",
    "memberof": "components/ModalGeneric.js~ModalGeneric",
    "longname": "components/ModalGeneric.js~ModalGeneric#componentDidMount",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/ModalGeneric.js~ModalGeneric",
    "longname": "components/ModalGeneric.js~ModalGeneric#render",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/ModalPageGeneric.js",
    "memberof": null,
    "longname": "components/ModalPageGeneric.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport ModalGeneric from './ModalGeneric';\r\n\r\n/**\r\n * Represents the background of the modal.\r\n * See bottom of file for required props.\r\n * @class ModalPage\r\n * */\r\nexport default class ModalPageGeneric extends Component {\r\n    /**\r\n     * @constructs Item\r\n     * @param {Object} props - Object passed down to us from our parent.\r\n     * */\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * Prevents default behavior and prevents\r\n     * event e from propagating up the node tree.\r\n     * */\r\n    stopEvent(e){\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        var modal_classes = (this.props.isVisible) ? 'ui dimmer modals page transition visible active' : 'ui dimmer modals page transition hidden';\r\n        return (\r\n            <div className={modal_classes}\r\n                 onClick={this.props.switchModalVisibility}\r\n                 onDrop={this.stopEvent}\r\n                 onDragOver={this.stopEvent}>\r\n                <ModalGeneric {...this.props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * isVisible: This is supposed to be a state in the element that this modal page is enclosed in.\r\n * switchModalVisibility: Is supposed to be the following function\r\n *    switchModalVisibility(){\r\n *       this.setState({...this.state,isVisible: !this.state.isVisible});\r\n *   }\r\n * */\r\nModalPageGeneric.propTypes = {\r\n    isVisible: React.PropTypes.bool.isRequired,\r\n    switchModalVisibility: React.PropTypes.func.isRequired,\r\n    reactComponent: React.PropTypes.element.isRequired\r\n}"
  },
  {
    "__docId__": 123,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ModalPageGeneric",
    "memberof": "components/ModalPageGeneric.js",
    "longname": "components/ModalPageGeneric.js~ModalPageGeneric",
    "access": null,
    "export": true,
    "importPath": "./components/ModalPageGeneric.js",
    "importStyle": "ModalPageGeneric",
    "description": "Represents the background of the modal.\nSee bottom of file for required props.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ModalPage"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/ModalPageGeneric.js~ModalPageGeneric",
    "longname": "components/ModalPageGeneric.js~ModalPageGeneric#constructor",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Item"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopEvent",
    "memberof": "components/ModalPageGeneric.js~ModalPageGeneric",
    "longname": "components/ModalPageGeneric.js~ModalPageGeneric#stopEvent",
    "access": null,
    "description": "Prevents default behavior and prevents\nevent e from propagating up the node tree.",
    "lineNumber": 24,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/ModalPageGeneric.js~ModalPageGeneric",
    "longname": "components/ModalPageGeneric.js~ModalPageGeneric#render",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/Sidebar.js",
    "memberof": null,
    "longname": "components/Sidebar.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport Category from './Category';\r\nimport ModalPageGeneric from './ModalPageGeneric'\r\nimport EditCategoryForm from './EditCategoryForm'\r\nimport AddCategoryForm from './AddCategoryForm'\r\n\r\n/**\r\n * Sidebar container component.\r\n * @class Sidebar\r\n * */\r\nexport default class Sidebar extends Component {\r\n    /**\r\n     * @constructs Sidebar\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * @param {Object[]} props.categories - See {@link CatalogApp#state}\r\n     * @param {STATUS} props.loginStatus - See {@link CatalogApp#STATUS}\r\n     * */\r\n    constructor(props){\r\n        super(props);\r\n        /** @member {Object} A State object composed of the state variables\r\n         * @property {boolean} state.isModalVisible - If true, the modal is visible, if false, the modal is hidden.\r\n         * @property {number} state.activeCategory - The id of the active category.\r\n         * */\r\n        this.state = {\r\n            isModalVisible: false,\r\n            activeCategory: 0\r\n        }\r\n    }\r\n\r\n    switchModalVisibility(){\r\n        /**\r\n         * Changes the visibility of the modal.\r\n         * */\r\n        this.setState({...this.state,isModalVisible: !this.state.isModalVisible});\r\n    }\r\n\r\n    setActiveCategory(id){\r\n        /**\r\n         * This function is passed to all categories. When clicked, a category will pass its\r\n         * id to this function and that way we'll know which category is being displayed at all times.\r\n         * */\r\n        this.setState({activeCategory: id})\r\n    }\r\n\r\n    render(){\r\n\r\n        this.reactElement = <AddCategoryForm\r\n            {...this.props}\r\n            switchModalVisibility={this.switchModalVisibility}\r\n            addCategory={this.props.addCategory}\r\n        />;\r\n\r\n        return(\r\n            <div className=\"ui small left vertical menu\">\r\n                {this.props.categories.map(\r\n                    function(category,index){\r\n                        return <Category key={category.id}\r\n                                         index={index}\r\n                                         category={category}\r\n                                         activeCategory={this.state.activeCategory}\r\n                                         setActiveCategory={this.setActiveCategory}\r\n                                         loginStatus={this.props.loginStatus}\r\n                                         deleteCategory={this.props.deleteCategory}\r\n                                         editCategory={this.props.editCategory}\r\n                                         displayCategory={this.props.displayCategory}/>;\r\n                    }.bind(this)\r\n                )}\r\n                <div className=\"ui item\"\r\n                     style={{display: this.props.loginStatus.value ? 'block' : 'none'}}>\r\n                    <div className=\"ui buttons\" style={{display: 'flex'}}>\r\n                        <div className=\"medium ui icon blue basic button\"\r\n                             onClick={this.switchModalVisibility}>\r\n                            <i className=\"add square icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <ModalPageGeneric isVisible={this.state.isModalVisible}\r\n                                      switchModalVisibility={this.switchModalVisibility}\r\n                                      reactComponent={this.reactElement}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"
  },
  {
    "__docId__": 128,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Sidebar",
    "memberof": "components/Sidebar.js",
    "longname": "components/Sidebar.js~Sidebar",
    "access": null,
    "export": true,
    "importPath": "./components/Sidebar.js",
    "importStyle": "Sidebar",
    "description": "Sidebar container component.",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Sidebar"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "Sidebar"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "props.categories",
        "description": "See {@link CatalogApp#state}"
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "props.loginStatus",
        "description": "See {@link CatalogApp#STATUS}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#state",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@member",
        "tagValue": "{Object} A State object composed of the state variables"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isModalVisible",
        "description": "If true, the modal is visible, if false, the modal is hidden."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.activeCategory",
        "description": "The id of the active category."
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "switchModalVisibility",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#switchModalVisibility",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setActiveCategory",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#setActiveCategory",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#render",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "reactElement",
    "memberof": "components/Sidebar.js~Sidebar",
    "longname": "components/Sidebar.js~Sidebar#reactElement",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/apiCall.js",
    "memberof": null,
    "longname": "components/apiCall.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "\r\n/**\r\n * Wrapper around Jquery.ajax()\r\n * @param {Object} options - Options passed down to JQuery.ajax()\r\n * @param {Object} [context=] - The context(this) from which the function is being called.\r\n * */\r\nexport default function(options,context){\r\n    return new Promise(function(resolve, reject) {\r\n\r\n        var nonce = null;\r\n        var updateNonce = null;\r\n\r\n        if(!context){\r\n            //If user failed to pass the context(this)\r\n            return console.error(\"Failed to pass in context\");\r\n        } else {\r\n            //The nonce may be in the props or in the state.\r\n            if(context.props && context.props.nonce){\r\n                //If it is in the props.\r\n                nonce = context.props.nonce;\r\n                updateNonce = context.props.updateNonce;\r\n            }\r\n            if(context.state && context.state.nonce){\r\n                //If it is in the state\r\n                nonce = context.state.nonce;\r\n                updateNonce = context.updateNonce;\r\n            }\r\n            if(nonce && updateNonce){\r\n                //If we found the nonce and the function to update it in the context we received.\r\n                //Then we make the ajax call we were asked to do.\r\n                $.ajax(options).done(\r\n                    function(re){\r\n                        //When the ajax call is done.\r\n                        if(re && re.nonce){\r\n                            //If we received a new nonce,\r\n                            //then we update the state.\r\n                            updateNonce(re.nonce);\r\n                            resolve(re);\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    });\r\n};\r\n"
  },
  {
    "__docId__": 136,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "apiCall",
    "memberof": "components/apiCall.js",
    "longname": "components/apiCall.js~apiCall",
    "access": null,
    "export": true,
    "importPath": "./components/apiCall.js",
    "importStyle": "apiCall",
    "description": "Wrapper around Jquery.ajax()",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options passed down to JQuery.ajax()"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "",
        "defaultRaw": "",
        "name": "context",
        "description": "The context(this) from which the function is being called."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "components/index.js",
    "memberof": null,
    "longname": "components/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Component from './Component';\r\nimport GoogleAuth2 from './GoogleAuth2'\r\nimport Sidebar from './Sidebar'\r\nimport ItemsContainer from './ItemsContainer'\r\nimport apiCall from './apiCall'\r\n\r\n\r\n/**\r\n * Main container. This is the root of the application and where most of the state is kept and changed.\r\n * @class Root\r\n * */\r\nexport default class Root extends Component {\r\n\r\n    /**\r\n     * @constructs CatalogApp\r\n     * @param {Object} props - Object passed down to us from our parent..\r\n     * */\r\n    constructor(props){\r\n        super(props);\r\n        /**\r\n         *Represents login status\r\n         * @type {Object}\r\n         * @property {{value: true, name: \"LoggedIn\"}} STATUS.LoggedIn - User is logged in.\r\n         * @property {{value: false, name: \"LoggedOut\"}} STATUS.LoggedOut - User is logged out.\r\n         * */\r\n        this.STATUS = {\r\n            LoggedIn : {value: true, name: \"LoggedIn\"},\r\n            LoggedOut : {value: false, name: \"LoggedOut\"}\r\n        };\r\n        /**\r\n         *Represents the current state.\r\n         * @type {Object}\r\n         * @property {Object[]} state.categories - The categories available.\r\n         * @property {Object[]} state.items - The items currently in display..\r\n         * @property {STATUS} state.login_status - The current login status.\r\n         * @property {number} state.categoryId - The categoryId for which items are in display.\r\n         * */\r\n        this.state = {\r\n            categories: [],\r\n            items: [],\r\n            loginStatus: this.STATUS.LoggedOut,\r\n            categoryId: 0,\r\n            nonce: $('#root').data(\"state\")\r\n        };\r\n    }\r\n\r\n\r\n    updateNonce(nonce){\r\n        this.setState({...this.state, nonce: nonce});\r\n    }\r\n\r\n\r\n    /**\r\n     * Listener triggered by GoogleAuth2 when a change in login state occurs.\r\n     * @param {STATUS} state - The current login status.\r\n     * */\r\n    onSessionChange(state){\r\n        //Let's set the state accordingly.\r\n        this.setState({...this.state,\r\n            loginStatus: state.value ? this.STATUS.LoggedIn : this.STATUS.LoggedOut});\r\n    }\r\n\r\n    /**\r\n     * Sets state such that the objects in the category passed in are displayed.\r\n     * @param {integer} id - category id of the category we want to display.\r\n     * */\r\n    displayCategory(id){\r\n        var index;\r\n        /**\r\n         * We need the category's index in the categories array.\r\n         * */\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(id===this.state.categories[i].id){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        //Get the category.\r\n        var category = this.state.categories[index];\r\n        //Get the items in it.\r\n        var items = category.items;\r\n        //Set the state accordingly.\r\n        this.setState({\r\n            ...this.state,\r\n            items: items,\r\n            categoryId: id\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Appends the category to the list of categories.\r\n     * @param {string} name - name of the category we wish to append.\r\n     * */\r\n    addCategory(name){\r\n        var newCategory = {\r\n            id: 0,\r\n            name: name,\r\n            picture: \"\",\r\n            items: []\r\n        };\r\n        //Get the current categories array.\r\n        var categories = this.state.categories;\r\n        //Create a new one that includes the new category.\r\n        var newCategories = [...categories,newCategory];\r\n        var index = newCategories.length-1;\r\n        var prevState = {...this.state};\r\n        var nextState = {...this.state,categories: newCategories};\r\n        //We're changing the state optimistically, without even having\r\n        //sent the request to the server.\r\n        this.setState(nextState);\r\n        /**\r\n         *We're sending the new category to the backend for processing.\r\n         * */\r\n        var endpoint = \"/categories/new?state=\";\r\n        apiCall({\r\n            url: endpoint+this.state.nonce,\r\n            dataType: 'json',\r\n            type: 'POST',\r\n            data: newCategory,\r\n            success: function(data) {\r\n                /**\r\n                 * The backend is going to send us the updated category\r\n                 * object, with the assigned id.\r\n                 * */\r\n                //We need to extract the id.\r\n                newCategory.id = data.category.id;\r\n                //And update the state so sync up with the server.\r\n                //This is also important because if we didn't do it,\r\n                //the user couldn't add more categories until reload\r\n                //since we would end up with multiple categories that\r\n                //have id zero, which is an issue for react.\r\n                var nextState = {\r\n                    ...this.state,\r\n                    categories : [\r\n                        ...categories,\r\n                        newCategory\r\n                    ]\r\n                };\r\n                this.setState(nextState);\r\n            }.bind(this),\r\n            error: function(xhr,status,err){\r\n                //If we get an error, then we rollback the changes by\r\n                //returning to the previous state.\r\n                this.setState(prevState);\r\n                //And let the developer know.\r\n                console.error(endpoint,status,err.toString());\r\n            }.bind(this)\r\n        },this);\r\n    }\r\n\r\n\r\n    /**\r\n     * Updates category to match the one passed in.\r\n     * @param {Object} newCategory - category we wish to edit.\r\n     * */\r\n    editCategory(newCategory){\r\n        var index;\r\n        /**\r\n         * We need the category's index in the categories array.\r\n         * */\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(newCategory.id===this.state.categories[i].id){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        /**\r\n         * Let's keep the previous state, in case something goes wrong.\r\n         * */\r\n        var prevState = {...this.state};\r\n        /**\r\n         * This is the state we wish to move to, but we need confirmation that\r\n         * it is consistent with the DB before we can set this in stone.\r\n         * */\r\n        var nextState = {\r\n            ...this.state,\r\n            categories : [\r\n                ...this.state.categories.slice(0,index),\r\n                newCategory,\r\n                ...this.state.categories.slice(index+1)\r\n            ]\r\n        };\r\n        /**\r\n         * We're going to be optimistic, and change the state before contating the\r\n         * backend.\r\n         * */\r\n        this.setState(nextState);\r\n\r\n        /**\r\n         *We're sending the edited category to the backend for processing.\r\n         * */\r\n        var endpoint = \"/categories/edit/\"+newCategory.id+\"?state=\";\r\n        apiCall({\r\n            url: endpoint+this.state.nonce,\r\n            dataType: 'json',\r\n            type: 'POST',\r\n            data: newCategory,\r\n            //If things go wrong, we just go back to the previous state :)\r\n            error: function(xhr,status,err){\r\n                this.setState(prevState);\r\n                console.error(endpoint,status,err.toString());\r\n            }.bind(this)\r\n        },this);\r\n    }\r\n\r\n\r\n    /**\r\n     * deletes category with id equal to the one passed in.\r\n     * @param {integer} id - categoryId of the category we wish to delete.\r\n     * */\r\n    deleteCategory(id){\r\n        var index;\r\n        /**\r\n         * We need the category's index in the categories array.\r\n         * */\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(id===this.state.categories[i].id){\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        /**\r\n         * Let's keep the previous state, in case something goes wrong.\r\n         * */\r\n        var prevState = {...this.state};\r\n        /**\r\n         * This is the state we wish to move to, but we need confirmation that\r\n         * it is consistent with the DB before we can set this in stone.\r\n         * */\r\n        var nextState = {\r\n            ...this.state,\r\n            categories : [\r\n                ...this.state.categories.slice(0,index),\r\n                ...this.state.categories.slice(index+1)\r\n            ]\r\n        };\r\n        /**\r\n         * Unless this category's items are being displayed right now, if that's the case\r\n         * then we want them to disappear since their parent category is being deleted.\r\n         * */\r\n        if(id===this.state.categoryId){\r\n            nextState = {\r\n                ...nextState,\r\n                items:[],\r\n                categoryId:0\r\n            }\r\n        }\r\n        /**\r\n         * We're going to be optimistic, and change the state before contating the\r\n         * backend.\r\n         * */\r\n        this.setState(nextState);\r\n        /**\r\n         *We're sending the request to the backend..\r\n         * */\r\n        var endpoint = \"/categories/delete/\"+id+\"?state=\";\r\n        apiCall({\r\n            url: endpoint+this.state.nonce,\r\n            dataType: 'json',\r\n            type: 'DELETE',\r\n            error: function(xhr,status,err){\r\n                this.setState(prevState);\r\n                console.error(endpoint,status,err.toString());\r\n            }.bind(this)\r\n        },this);\r\n\r\n    }\r\n\r\n    /**\r\n     * Adds item to the currently displayed category.\r\n     * @param {Object} item - The item that will be added.\r\n     * @property {number} item.categoryId - Category id\r\n     * @property {number} item.id - Item id\r\n     * @property {string} state.picture - The path to the item's picture\r\n     * @property {string} state.name - The item's name.\r\n     * @property {string} state.price - The item's price.\r\n     * @property {boolean} state.isDescriptionValid\r\n     * @property {Object} state.file - A File object\r\n     * @property {boolean} state.newPictureMounted\r\n     * */\r\n    addItem(item){\r\n        //Let's figure out the index of this item's category.\r\n        var catIndex;\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(item.categoryId===this.state.categories[i].id){\r\n                catIndex=i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //Let's store the current state and create a\r\n        //new one.\r\n        var prevCategories = this.state.categories;\r\n        var nextCategories = [...this.state.categories];\r\n        var prevItems =  prevCategories[catIndex].items;\r\n        var nextItems = [...prevCategories[catIndex].items,item];\r\n\r\n        let file = item.file;\r\n        var fd = new FormData();\r\n        fd.append(\"picture_file\", file);\r\n        var filePath = \"/static/images/\"+file.name;\r\n\r\n        var url1 = filePath+\"?state=\";\r\n        apiCall({\r\n            url: url1+this.state.nonce,\r\n            type: 'POST',\r\n            data: fd,\r\n            contentType: false,\r\n            processData: false,\r\n            error: function (xhr, status, err) {\r\n                //And communicate the error.\r\n                //Something production ready would do\r\n                //something to the UI to make the user aware of this.\r\n                console.error(\"Error uploading picture.\");\r\n                console.error(xhr, status, err.toString());\r\n            }.bind(this)\r\n        },this).then(function(){\r\n            //File is in the server now, so we can update the picture.\r\n            //The form in the backend gets confused if there's a\r\n            // file so let's clear it.\r\n            nextItems[nextItems.length-1].file = \"\";\r\n            //Items are inside categories, so I need to update them\r\n            //also if I want them to be up to date.\r\n            nextCategories[catIndex].items = nextItems;\r\n            this.setState({\r\n                categories: nextCategories,\r\n                items: nextCategories[catIndex].items}\r\n            );\r\n            var url2 = \"/items/add?state=\";\r\n            apiCall({\r\n                url: url2+this.state.nonce,\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                data: nextItems[nextItems.length-1],\r\n                success: function(data){\r\n                    nextItems[nextItems.length-1].id = data.id\r\n                    nextCategories[catIndex].items = nextItems;\r\n                    this.setState({\r\n                        categories: nextCategories,\r\n                        items: nextCategories[catIndex].items}\r\n                    );\r\n                }.bind(this),\r\n                error: function(xhr,status,err){\r\n                    //If things go bad, we go back to\r\n                    //the previous state.\r\n                    prevCategories[catIndex].items = prevItems;\r\n                    this.setState({...this.state,\r\n                        categories: prevCategories,\r\n                        items: prevItems}\r\n                    );\r\n                }.bind(this)\r\n            },this);\r\n        }.bind(this));\r\n    }\r\n\r\n\r\n    /**\r\n     * Edits item\r\n     * @param {Object} item - The item that will be added.\r\n     * @property {number} item.categoryId - Category id\r\n     * @property {number} item.id - Item id\r\n     * @property {string} state.picture - The path to the item's picture\r\n     * @property {string} state.name - The item's name.\r\n     * @property {string} state.price - The item's price.\r\n     * @property {boolean} state.isDescriptionValid\r\n     * @property {Object} state.file - A File object\r\n     * @property {boolean} state.newPictureMounted\r\n     * */\r\n    editItem(item){\r\n        var catIndex;\r\n        var itemIndex;\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(item.categoryId===this.state.categories[i].id){\r\n                catIndex=i;\r\n                var prevCategory = this.state.categories[i];\r\n                for(let j=0;j<prevCategory.items.length;j++){\r\n                    if(item.id===prevCategory.items[j].id){\r\n                        itemIndex = j;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var prevCategories = this.state.categories;\r\n        var nextCategories = [...this.state.categories];\r\n        var prevItem =  nextCategories[catIndex].items[itemIndex];\r\n        var nextItem = {...nextCategories[catIndex].items[itemIndex]};\r\n        nextItem.picture = item.picture;\r\n        nextItem.name = item.name;\r\n        nextItem.description = item.description;\r\n        nextItem.price = item.price;\r\n        nextItem.file = item.file;\r\n\r\n        /**\r\n         * Does the item contains a new picture? Or just changes\r\n         * to the text?\r\n         * */\r\n        if(item.newPicture){\r\n            /**\r\n             * If the item does contain a new picture.\r\n             * */\r\n            //We're gong to extract the file.\r\n            let file = nextItem.file;\r\n            var fd = new FormData();\r\n            fd.append(\"picture_file\", file);\r\n            var filePath = \"/static/images/\"+file.name;\r\n            var url1 = filePath+\"?state=\";\r\n            apiCall({\r\n                url: url1+this.state.nonce,\r\n                type: 'POST',\r\n                data: fd,\r\n                contentType: false,\r\n                processData: false,\r\n                error: function (xhr, status, err) {\r\n                    //If something goes wrong.\r\n                    // Let's go back to the previous state.\r\n                    this.setState({\r\n                        categories: prevCategories,\r\n                        items: prevCategories[catIndex].items}\r\n                    );\r\n                    //And communicate the error.\r\n                    //Something production ready would do\r\n                    //something to the UI to make the user aware of this.\r\n                    console.error(\"Error uploading picture.\");\r\n                    console.error(xhr, status, err.toString());\r\n                }.bind(this)\r\n            },this).then(function(){\r\n                //File is in the server now, so we can update the picture.\r\n                nextItem.file = \"\";\r\n                nextCategories[catIndex].items[itemIndex] = nextItem;\r\n                this.setState({\r\n                    categories: nextCategories,\r\n                    items: nextCategories[catIndex].items}\r\n                );\r\n                var url2 = \"/items/edit/\"+item.id+\"?state=\";\r\n                apiCall({\r\n                    url: url2+this.state.nonce,\r\n                    dataType: 'json',\r\n                    type: 'POST',\r\n                    data: nextItem,\r\n                    error: function(xhr,status,err){\r\n                        //If things go bad, we go back to\r\n                        //the previous state.\r\n                        prevCategories[catIndex].items[itemIndex] = prevItem;\r\n                        this.setState({...this.state,\r\n                            categories: prevCategories,\r\n                            items:prevCategories[catIndex].items}\r\n                        );\r\n                    }.bind(this)\r\n                },this);\r\n            }.bind(this));\r\n        } else {\r\n            //If it is just changes to the text\r\n            //Let's be optimistic and update the item.\r\n            nextCategories[catIndex].items[itemIndex] = nextItem;\r\n            this.setState({\r\n                categories: nextCategories,\r\n                items: nextCategories[catIndex].items}\r\n            );\r\n            var url2 = \"/items/edit/\"+item.id+\"?state=\";\r\n            apiCall({\r\n                url: url2+this.state.nonce,\r\n                dataType: 'json',\r\n                type: 'POST',\r\n                data: item,\r\n                error: function(xhr,status,err){\r\n                    //If things go bad, we go back to\r\n                    //the previous state.\r\n                    prevCategories[catIndex].items[itemIndex] = prevItem;\r\n                    this.setState({...this.state,\r\n                        categories: prevCategories,\r\n                        items:prevCategories[catIndex].items}\r\n                    );\r\n                }.bind(this)\r\n            },this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes an item\r\n     * @param {number} id - The id of the item to be deleted.\r\n     * */\r\n    deleteItem(id){\r\n        var catIndex;\r\n        var itemIndex;\r\n        for(let i=0;i<this.state.categories.length;i++){\r\n            if(this.state.categoryId===this.state.categories[i].id){\r\n                catIndex=i;\r\n                for(let j=0;j<this.state.categories[catIndex].items.length;j++){\r\n                    if(id===this.state.categories[catIndex].items[j].id){\r\n                        itemIndex = j;\r\n                        break;\r\n                   }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        //Let's store the current state and create a\r\n        //the next one.\r\n        var prevCategories = this.state.categories;\r\n        var prevItems =  [...prevCategories[catIndex].items];\r\n        var nextCategories = [...this.state.categories];\r\n        var nextItems =  [...prevItems];\r\n        nextItems.splice(itemIndex,1);\r\n        nextCategories[catIndex].items = nextItems;\r\n        var nextState = {...this.state,\r\n            categories: nextCategories,\r\n            items: nextCategories[catIndex].items\r\n        };\r\n        //Let's set the new state optimistically.\r\n        this.setState(nextState);\r\n        var endpoint = \"/items/delete/\"+id+\"?state=\";\r\n        apiCall({\r\n            url: endpoint+this.state.nonce,\r\n            dataType:'json',\r\n            type: 'DELETE',\r\n            data: [],\r\n            cache: false,\r\n            error: function(xhr, status, err){\r\n                prevCategories[catIndex].items = prevItems;\r\n                this.setState({\r\n                    ...this.state,\r\n                    categories: prevCategories,\r\n                    items: prevItems\r\n                });\r\n                console.error(xhr, status, err.toString());\r\n            }.bind(this)\r\n        },this);\r\n    }\r\n\r\n\r\n    /**\r\n     * Loads categories from server.\r\n     * */\r\n    loadCategories(){\r\n        apiCall({\r\n            url: '/categories/json?state='+this.state.nonce,\r\n            dataType:'json',\r\n            cache: false,\r\n            success: function(data){\r\n                this.setState({categories: data.categories});\r\n            }.bind(this),\r\n            error: function(xhr, status, err){\r\n                console.error(this.state.restaurantListURL, status, err.toString());\r\n            }.bind(this)\r\n        },this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.loadCategories();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <GoogleAuth2 onSessionChange={this.onSessionChange}\r\n                             nonce={this.state.nonce}\r\n                             updateNonce={this.updateNonce}/>\r\n                <div className=\"root_container ui stackable padded grid\"\r\n                     style={this.state.loginStatus.value ? {paddingTop: '54px'}: {} }>\r\n                    <div className=\"row\">\r\n                        <div className=\"left floated left two wide column\">\r\n                            <Sidebar categories={this.state.categories}\r\n                                     loginStatus={this.state.loginStatus}\r\n                                     displayCategory={this.displayCategory}\r\n                                     deleteCategory={this.deleteCategory}\r\n                                     addCategory={this.addCategory}\r\n                                     editCategory={this.editCategory}/>\r\n                        </div>\r\n                        <div className=\"left floated left aligned thirteen wide column\">\r\n                            <ItemsContainer items={this.state.items}\r\n                                            loginStatus={this.state.loginStatus}\r\n                                            categoryId={this.state.categoryId}\r\n                                            addItem={this.addItem}\r\n                                            editItem={this.editItem}\r\n                                            deleteItem={this.deleteItem}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n$( document ).ready(function() {\r\n    ReactDOM.render(\r\n        <Root/>,\r\n        document.getElementById(\"root\")\r\n    );\r\n});\r\n"
  },
  {
    "__docId__": 138,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Root",
    "memberof": "components/index.js",
    "longname": "components/index.js~Root",
    "access": null,
    "export": true,
    "importPath": "./components/index.js",
    "importStyle": "Root",
    "description": "Main container. This is the root of the application and where most of the state is kept and changed.",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Root"
      }
    ],
    "interface": false,
    "extends": [
      "components/Component.js~Component"
    ]
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@constructs",
        "tagValue": "CatalogApp"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Object passed down to us from our parent.."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "STATUS",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#STATUS",
    "access": null,
    "description": "Represents login status",
    "lineNumber": 28,
    "properties": [
      {
        "nullable": null,
        "types": [
          "{value: true, name: \"LoggedIn\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedIn",
        "description": "User is logged in."
      },
      {
        "nullable": null,
        "types": [
          "{value: false, name: \"LoggedOut\"}"
        ],
        "spread": false,
        "optional": false,
        "name": "STATUS.LoggedOut",
        "description": "User is logged out."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#state",
    "access": null,
    "description": "Represents the current state.",
    "lineNumber": 40,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "state.categories",
        "description": "The categories available."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "state.items",
        "description": "The items currently in display.."
      },
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "state.login_status",
        "description": "The current login status."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "state.categoryId",
        "description": "The categoryId for which items are in display."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateNonce",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#updateNonce",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "nonce",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onSessionChange",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#onSessionChange",
    "access": null,
    "description": "Listener triggered by GoogleAuth2 when a change in login state occurs.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "STATUS"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "The current login status."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "displayCategory",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#displayCategory",
    "access": null,
    "description": "Sets state such that the objects in the category passed in are displayed.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "category id of the category we want to display."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addCategory",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#addCategory",
    "access": null,
    "description": "Appends the category to the list of categories.",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name of the category we wish to append."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "editCategory",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#editCategory",
    "access": null,
    "description": "Updates category to match the one passed in.",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newCategory",
        "description": "category we wish to edit."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deleteCategory",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#deleteCategory",
    "access": null,
    "description": "deletes category with id equal to the one passed in.",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "categoryId of the category we wish to delete."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addItem",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#addItem",
    "access": null,
    "description": "Adds item to the currently displayed category.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "The item that will be added."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "item.categoryId",
        "description": "Category id"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "item.id",
        "description": "Item id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.picture",
        "description": "The path to the item's picture"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The item's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.price",
        "description": "The item's price."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDescriptionValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.file",
        "description": "A File object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.newPictureMounted",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "editItem",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#editItem",
    "access": null,
    "description": "Edits item",
    "lineNumber": 372,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": "The item that will be added."
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "item.categoryId",
        "description": "Category id"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "item.id",
        "description": "Item id"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.picture",
        "description": "The path to the item's picture"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.name",
        "description": "The item's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state.price",
        "description": "The item's price."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.isDescriptionValid",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state.file",
        "description": "A File object"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "state.newPictureMounted",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 150,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deleteItem",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#deleteItem",
    "access": null,
    "description": "Deletes an item",
    "lineNumber": 485,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the item to be deleted."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 151,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadCategories",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#loadCategories",
    "access": null,
    "description": "Loads categories from server.",
    "lineNumber": 537,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "componentDidMount",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#componentDidMount",
    "access": null,
    "description": null,
    "lineNumber": 552,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "render",
    "memberof": "components/index.js~Root",
    "longname": "components/index.js~Root#render",
    "access": null,
    "description": null,
    "lineNumber": 556,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 208,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]